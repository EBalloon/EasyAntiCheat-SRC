/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'EasyAntiCheat.sys'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _UNICODE_STRING;
struct _STRING;
struct _FLT_REGISTRATION;
struct _FLT_CONTEXT_REGISTRATION;
struct _FLT_OPERATION_REGISTRATION;
struct _FLT_CALLBACK_DATA;
struct _FLT_IO_PARAMETER_BLOCK;
struct _FILE_OBJECT;
struct _DEVICE_OBJECT;
struct _DRIVER_OBJECT;
struct _DRIVER_EXTENSION;
struct _FAST_IO_DISPATCH;
struct _FILE_BASIC_INFORMATION;
struct _FILE_STANDARD_INFORMATION;
struct _ERESOURCE;
struct _OWNER_ENTRY;
struct _MDL;
struct _COMPRESSED_DATA_INFO;
struct _IRP;
struct _IO_STACK_LOCATION;
struct _IO_SECURITY_CONTEXT;
struct _SECURITY_QUALITY_OF_SERVICE;
struct _ACCESS_STATE;
struct _NAMED_PIPE_CREATE_PARAMETERS;
struct _MAILSLOT_CREATE_PARAMETERS;
struct _VPB;
struct _SCSI_REQUEST_BLOCK;
struct _FILE_GET_QUOTA_INFORMATION;
struct _INTERFACE;
struct _DEVICE_CAPABILITIES;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _POWER_SEQUENCE;
struct _CM_RESOURCE_LIST;
struct _KDPC;
struct _DEVOBJ_EXTENSION;
struct _SECTION_OBJECT_POINTERS;
struct _IO_COMPLETION_CONTEXT;
struct _FS_FILTER_SECTION_SYNC_OUTPUT;
struct _FLT_TAG_DATA_BUFFER;
struct _FLT_RELATED_OBJECTS;
struct _FLT_NAME_CONTROL;
struct _FILE_NAMES_INFORMATION;
struct _IMAGE_DATA_DIRECTORY;
struct _IMAGE_OPTIONAL_HEADER32;
struct _IMAGE_NT_HEADERS64;
struct _PEB;
struct _PEB_LDR_DATA;
struct _RTL_USER_PROCESS_PARAMETERS;
struct _RTL_CRITICAL_SECTION;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct _PEB_FREE_BLOCK;
struct _ACTIVATION_CONTEXT_DATA;

/* 1 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 2 */
typedef struct _GUID GUID;

/* 3 */
struct RUNTIME_FUNCTION
{
  void *__ptr32 FunctionStart;
  void *__ptr32 FunctionEnd;
  void *__ptr32 UnwindInfo;
};

/* 4 */
struct UNWIND_INFO_HDR
{
  char Ver3_Flags;
  char PrologSize;
  char CntUnwindCodes;
  char FrReg_FrRegOff;
};

/* 5 */
struct UNWIND_CODE
{
  char PrologOff;
  char OpCode_OpInfo;
};

/* 7 */
typedef unsigned int ULONG;

/* 10 */
typedef int LONG;

/* 9 */
struct _KSYSTEM_TIME
{
  ULONG LowPart;
  LONG High1Time;
  LONG High2Time;
};

/* 8 */
typedef struct _KSYSTEM_TIME KSYSTEM_TIME;

/* 11 */
typedef unsigned __int16 USHORT;

/* 13 */
typedef unsigned __int16 wchar_t;

/* 12 */
typedef wchar_t WCHAR;

/* 15 */
enum _NT_PRODUCT_TYPE
{
  NtProductWinNt = 0x1,
  NtProductLanManNt = 0x2,
  NtProductServer = 0x3,
};

/* 14 */
typedef enum _NT_PRODUCT_TYPE NT_PRODUCT_TYPE;

/* 16 */
typedef unsigned __int8 BOOLEAN;

/* 18 */
enum _ALTERNATIVE_ARCHITECTURE_TYPE
{
  StandardDesign = 0x0,
  NEC98x86 = 0x1,
  EndAlternatives = 0x2,
};

/* 17 */
typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE ALTERNATIVE_ARCHITECTURE_TYPE;

/* 22 */
typedef unsigned int DWORD;

/* 21 */
struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E
{
  DWORD LowPart;
  LONG HighPart;
};

/* 23 */
typedef __int64 LONGLONG;

/* 20 */
union _LARGE_INTEGER
{
  struct
  {
    DWORD LowPart;
    LONG HighPart;
  };
  struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E u;
  LONGLONG QuadPart;
};

/* 19 */
typedef union _LARGE_INTEGER LARGE_INTEGER;

/* 24 */
typedef unsigned __int8 UCHAR;

/* 25 */
typedef unsigned __int64 ULONGLONG;

/* 27 */
typedef unsigned __int64 ULONG64;

/* 26 */
union _KUSER_SHARED_DATA::$ADB7E8017FF04436E010ECE62AC7A499
{
  volatile KSYSTEM_TIME TickCount;
  volatile ULONG64 TickCountQuad;
};

/* 29 */
struct _KUSER_SHARED_DATA::$3E1AFDE9BDEF1F1FA6D4A887C557AEC6::$2FB59617C660083086FA63EF620C28E5
{
  unsigned __int32 DbgErrorPortPresent : 1;
  unsigned __int32 DbgElevationEnabled : 1;
  unsigned __int32 DbgVirtEnabled : 1;
  unsigned __int32 DbgInstallerDetectEnabled : 1;
  unsigned __int32 SpareBits : 28;
};

/* 28 */
union _KUSER_SHARED_DATA::$3E1AFDE9BDEF1F1FA6D4A887C557AEC6
{
  ULONG SharedDataFlags;
  struct
  {
    unsigned __int32 DbgErrorPortPresent : 1;
    unsigned __int32 DbgElevationEnabled : 1;
    unsigned __int32 DbgVirtEnabled : 1;
    unsigned __int32 DbgInstallerDetectEnabled : 1;
    unsigned __int32 SpareBits : 28;
  };
};

/* 31 */
typedef unsigned __int64 ULONG_PTR;

/* 30 */
typedef ULONG_PTR KAFFINITY;

/* 6 */
struct _KUSER_SHARED_DATA
{
  ULONG TickCountLowDeprecated;
  ULONG TickCountMultiplier;
  volatile KSYSTEM_TIME InterruptTime;
  volatile KSYSTEM_TIME SystemTime;
  volatile KSYSTEM_TIME TimeZoneBias;
  USHORT ImageNumberLow;
  USHORT ImageNumberHigh;
  WCHAR NtSystemRoot[260];
  ULONG MaxStackTraceDepth;
  ULONG CryptoExponent;
  ULONG TimeZoneId;
  ULONG LargePageMinimum;
  ULONG Reserved2[7];
  NT_PRODUCT_TYPE NtProductType;
  BOOLEAN ProductTypeIsValid;
  ULONG NtMajorVersion;
  ULONG NtMinorVersion;
  BOOLEAN ProcessorFeatures[64];
  ULONG Reserved1;
  ULONG Reserved3;
  volatile ULONG TimeSlip;
  ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  LARGE_INTEGER SystemExpirationDate;
  ULONG SuiteMask;
  BOOLEAN KdDebuggerEnabled;
  UCHAR NXSupportPolicy;
  volatile ULONG ActiveConsoleId;
  volatile ULONG DismountCount;
  ULONG ComPlusPackage;
  ULONG LastSystemRITEventTickCount;
  ULONG NumberOfPhysicalPages;
  BOOLEAN SafeBootMode;
  ULONG TraceLogging;
  ULONG Fill0;
  ULONGLONG TestRetInstruction;
  ULONG SystemCall;
  ULONG SystemCallReturn;
  ULONGLONG SystemCallPad[3];
  union
  {
    volatile KSYSTEM_TIME TickCount;
    volatile ULONG64 TickCountQuad;
  };
  ULONG Cookie;
  LONGLONG ConsoleSessionForegroundProcessId;
  ULONG Wow64SharedInformation[16];
  USHORT UserModeGlobalLogger[8];
  ULONG HeapTracingPid[2];
  ULONG CritSecTracingPid[2];
  union
  {
    ULONG SharedDataFlags;
    struct
    {
      unsigned __int32 DbgErrorPortPresent : 1;
      unsigned __int32 DbgElevationEnabled : 1;
      unsigned __int32 DbgVirtEnabled : 1;
      unsigned __int32 DbgInstallerDetectEnabled : 1;
      unsigned __int32 SpareBits : 28;
    };
  };
  ULONG ImageFileExecutionOptions;
  KAFFINITY ActiveProcessorAffinity;
};

/* 33 */
typedef void *PVOID;

/* 39 */
union _DISPATCHER_HEADER::$C692E9AEA376E54441FB800CD9AFB217::$D43038B1DD00167268319662DF7D50CE
{
  volatile LONG Lock;
  LONG LockNV;
};

/* 40 */
struct _DISPATCHER_HEADER::$C692E9AEA376E54441FB800CD9AFB217::$147445C0E4E68EEE8CC57231FACAF18E
{
  UCHAR Type;
  UCHAR Signalling;
  UCHAR Size;
  UCHAR Reserved1;
};

/* 43 */
struct _DISPATCHER_HEADER::$::$::$C455783609593A5FC0070ED780464C2D::$F32BA6C812E0F769F09938C2098D009F
{
  unsigned __int8 Absolute : 1;
  unsigned __int8 Wake : 1;
  unsigned __int8 EncodedTolerableDelay : 6;
};

/* 42 */
union _DISPATCHER_HEADER::$::$C40575DFC387C8F4117E2F825EAF6417::$C455783609593A5FC0070ED780464C2D
{
  UCHAR TimerControlFlags;
  struct
  {
    unsigned __int8 Absolute : 1;
    unsigned __int8 Wake : 1;
    unsigned __int8 EncodedTolerableDelay : 6;
  };
};

/* 45 */
struct _DISPATCHER_HEADER::$::$::$05D45FD30F9D93B8752762EBBCB0BF0A::$AA905F972124AC55790449D6420AAEA5
{
  unsigned __int8 Index : 6;
  unsigned __int8 Inserted : 1;
  unsigned __int8 Expired : 1;
};

/* 44 */
union _DISPATCHER_HEADER::$::$C40575DFC387C8F4117E2F825EAF6417::$05D45FD30F9D93B8752762EBBCB0BF0A
{
  UCHAR TimerMiscFlags;
  struct
  {
    unsigned __int8 Index : 6;
    unsigned __int8 Inserted : 1;
    unsigned __int8 Expired : 1;
  };
};

/* 41 */
struct _DISPATCHER_HEADER::$C692E9AEA376E54441FB800CD9AFB217::$C40575DFC387C8F4117E2F825EAF6417
{
  UCHAR TimerType;
  union
  {
    UCHAR TimerControlFlags;
    struct
    {
      unsigned __int8 Absolute : 1;
      unsigned __int8 Wake : 1;
      unsigned __int8 EncodedTolerableDelay : 6;
    };
  };
  UCHAR Hand;
  union
  {
    UCHAR TimerMiscFlags;
    struct
    {
      unsigned __int8 Index : 6;
      unsigned __int8 Inserted : 1;
      unsigned __int8 Expired : 1;
    };
  };
};

/* 48 */
struct _DISPATCHER_HEADER::$::$::$BC95C1005138DD6C54C311F6EA5D109E::$79EE8220B9CBCC15640D116F9688A663
{
  unsigned __int8 Timer2Inserted : 1;
  unsigned __int8 Timer2Expiring : 1;
  unsigned __int8 Timer2CancelPending : 1;
  unsigned __int8 Timer2SetPending : 1;
  unsigned __int8 Timer2Running : 1;
  unsigned __int8 Timer2Disabled : 1;
  unsigned __int8 Timer2ReservedFlags : 2;
};

/* 47 */
union _DISPATCHER_HEADER::$::$93871522DA2DA651F6EE6945327295BD::$BC95C1005138DD6C54C311F6EA5D109E
{
  UCHAR Timer2Flags;
  struct
  {
    unsigned __int8 Timer2Inserted : 1;
    unsigned __int8 Timer2Expiring : 1;
    unsigned __int8 Timer2CancelPending : 1;
    unsigned __int8 Timer2SetPending : 1;
    unsigned __int8 Timer2Running : 1;
    unsigned __int8 Timer2Disabled : 1;
    unsigned __int8 Timer2ReservedFlags : 2;
  };
};

/* 46 */
struct _DISPATCHER_HEADER::$C692E9AEA376E54441FB800CD9AFB217::$93871522DA2DA651F6EE6945327295BD
{
  UCHAR Timer2Type;
  union
  {
    UCHAR Timer2Flags;
    struct
    {
      unsigned __int8 Timer2Inserted : 1;
      unsigned __int8 Timer2Expiring : 1;
      unsigned __int8 Timer2CancelPending : 1;
      unsigned __int8 Timer2SetPending : 1;
      unsigned __int8 Timer2Running : 1;
      unsigned __int8 Timer2Disabled : 1;
      unsigned __int8 Timer2ReservedFlags : 2;
    };
  };
  UCHAR Timer2ComponentId;
  UCHAR Timer2RelativeId;
};

/* 51 */
struct _DISPATCHER_HEADER::$::$::$1728BC3AACECDC2141D1E32FE66EA23E::$3EFE0FF07DD77BBDEABCDA7FF0A75165
{
  unsigned __int8 Abandoned : 1;
  unsigned __int8 DisableIncrement : 1;
  unsigned __int8 QueueReservedControlFlags : 6;
};

/* 50 */
union _DISPATCHER_HEADER::$::$5BEE508906071BCCD40638FEAF58F305::$1728BC3AACECDC2141D1E32FE66EA23E
{
  UCHAR QueueControlFlags;
  struct
  {
    unsigned __int8 Abandoned : 1;
    unsigned __int8 DisableIncrement : 1;
    unsigned __int8 QueueReservedControlFlags : 6;
  };
};

/* 49 */
struct _DISPATCHER_HEADER::$C692E9AEA376E54441FB800CD9AFB217::$5BEE508906071BCCD40638FEAF58F305
{
  UCHAR QueueType;
  union
  {
    UCHAR QueueControlFlags;
    struct
    {
      unsigned __int8 Abandoned : 1;
      unsigned __int8 DisableIncrement : 1;
      unsigned __int8 QueueReservedControlFlags : 6;
    };
  };
  UCHAR QueueSize;
  UCHAR QueueReserved;
};

/* 54 */
struct _DISPATCHER_HEADER::$::$::$0E76FCEEB5609B75E7D96C8D89B50E90::$289C34DDD4E6D8A579D3E1CDF74CD890
{
  unsigned __int8 CycleProfiling : 1;
  unsigned __int8 CounterProfiling : 1;
  unsigned __int8 GroupScheduling : 1;
  unsigned __int8 AffinitySet : 1;
  unsigned __int8 Tagged : 1;
  unsigned __int8 EnergyProfiling : 1;
  unsigned __int8 SchedulerAssist : 1;
  unsigned __int8 ThreadReservedControlFlags : 1;
};

/* 53 */
union _DISPATCHER_HEADER::$::$C4D4F6505347955A7E49BDD08F2B07A4::$0E76FCEEB5609B75E7D96C8D89B50E90
{
  UCHAR ThreadControlFlags;
  struct
  {
    unsigned __int8 CycleProfiling : 1;
    unsigned __int8 CounterProfiling : 1;
    unsigned __int8 GroupScheduling : 1;
    unsigned __int8 AffinitySet : 1;
    unsigned __int8 Tagged : 1;
    unsigned __int8 EnergyProfiling : 1;
    unsigned __int8 SchedulerAssist : 1;
    unsigned __int8 ThreadReservedControlFlags : 1;
  };
};

/* 56 */
struct _DISPATCHER_HEADER::$::$::$49B2F56B82B650C36577DFA53D44488C::$5B46111089229E54AB036CC97FD77231
{
  unsigned __int8 ActiveDR7 : 1;
  unsigned __int8 Instrumented : 1;
  unsigned __int8 Minimal : 1;
  unsigned __int8 Reserved4 : 3;
  unsigned __int8 UmsScheduled : 1;
  unsigned __int8 UmsPrimary : 1;
};

/* 55 */
union _DISPATCHER_HEADER::$::$C4D4F6505347955A7E49BDD08F2B07A4::$49B2F56B82B650C36577DFA53D44488C
{
  UCHAR DebugActive;
  struct
  {
    unsigned __int8 ActiveDR7 : 1;
    unsigned __int8 Instrumented : 1;
    unsigned __int8 Minimal : 1;
    unsigned __int8 Reserved4 : 3;
    unsigned __int8 UmsScheduled : 1;
    unsigned __int8 UmsPrimary : 1;
  };
};

/* 52 */
struct _DISPATCHER_HEADER::$C692E9AEA376E54441FB800CD9AFB217::$C4D4F6505347955A7E49BDD08F2B07A4
{
  UCHAR ThreadType;
  UCHAR ThreadReserved;
  union
  {
    UCHAR ThreadControlFlags;
    struct
    {
      unsigned __int8 CycleProfiling : 1;
      unsigned __int8 CounterProfiling : 1;
      unsigned __int8 GroupScheduling : 1;
      unsigned __int8 AffinitySet : 1;
      unsigned __int8 Tagged : 1;
      unsigned __int8 EnergyProfiling : 1;
      unsigned __int8 SchedulerAssist : 1;
      unsigned __int8 ThreadReservedControlFlags : 1;
    };
  };
  union
  {
    UCHAR DebugActive;
    struct
    {
      unsigned __int8 ActiveDR7 : 1;
      unsigned __int8 Instrumented : 1;
      unsigned __int8 Minimal : 1;
      unsigned __int8 Reserved4 : 3;
      unsigned __int8 UmsScheduled : 1;
      unsigned __int8 UmsPrimary : 1;
    };
  };
};

/* 57 */
struct _DISPATCHER_HEADER::$C692E9AEA376E54441FB800CD9AFB217::$3EF41BFA0BF183FFCD9D039EF3AA2B7F
{
  UCHAR MutantType;
  UCHAR MutantSize;
  BOOLEAN DpcActive;
  UCHAR MutantReserved;
};

/* 38 */
union _DISPATCHER_HEADER::$C692E9AEA376E54441FB800CD9AFB217
{
  union
  {
    volatile LONG Lock;
    LONG LockNV;
  };
  struct
  {
    UCHAR Type;
    UCHAR Signalling;
    UCHAR Size;
    UCHAR Reserved1;
  };
  struct
  {
    UCHAR TimerType;
    union
    {
      UCHAR TimerControlFlags;
      struct
      {
        unsigned __int8 Absolute : 1;
        unsigned __int8 Wake : 1;
        unsigned __int8 EncodedTolerableDelay : 6;
      };
    };
    UCHAR Hand;
    union
    {
      UCHAR TimerMiscFlags;
      struct
      {
        unsigned __int8 Index : 6;
        unsigned __int8 Inserted : 1;
        unsigned __int8 Expired : 1;
      };
    };
  };
  struct
  {
    UCHAR Timer2Type;
    union
    {
      UCHAR Timer2Flags;
      struct
      {
        unsigned __int8 Timer2Inserted : 1;
        unsigned __int8 Timer2Expiring : 1;
        unsigned __int8 Timer2CancelPending : 1;
        unsigned __int8 Timer2SetPending : 1;
        unsigned __int8 Timer2Running : 1;
        unsigned __int8 Timer2Disabled : 1;
        unsigned __int8 Timer2ReservedFlags : 2;
      };
    };
    UCHAR Timer2ComponentId;
    UCHAR Timer2RelativeId;
  };
  struct
  {
    UCHAR QueueType;
    union
    {
      UCHAR QueueControlFlags;
      struct
      {
        unsigned __int8 Abandoned : 1;
        unsigned __int8 DisableIncrement : 1;
        unsigned __int8 QueueReservedControlFlags : 6;
      };
    };
    UCHAR QueueSize;
    UCHAR QueueReserved;
  };
  struct
  {
    UCHAR ThreadType;
    UCHAR ThreadReserved;
    union
    {
      UCHAR ThreadControlFlags;
      struct
      {
        unsigned __int8 CycleProfiling : 1;
        unsigned __int8 CounterProfiling : 1;
        unsigned __int8 GroupScheduling : 1;
        unsigned __int8 AffinitySet : 1;
        unsigned __int8 Tagged : 1;
        unsigned __int8 EnergyProfiling : 1;
        unsigned __int8 SchedulerAssist : 1;
        unsigned __int8 ThreadReservedControlFlags : 1;
      };
    };
    union
    {
      UCHAR DebugActive;
      struct
      {
        unsigned __int8 ActiveDR7 : 1;
        unsigned __int8 Instrumented : 1;
        unsigned __int8 Minimal : 1;
        unsigned __int8 Reserved4 : 3;
        unsigned __int8 UmsScheduled : 1;
        unsigned __int8 UmsPrimary : 1;
      };
    };
  };
  struct
  {
    UCHAR MutantType;
    UCHAR MutantSize;
    BOOLEAN DpcActive;
    UCHAR MutantReserved;
  };
};

/* 59 */
struct _LIST_ENTRY
{
  struct _LIST_ENTRY *Flink;
  struct _LIST_ENTRY *Blink;
};

/* 58 */
typedef struct _LIST_ENTRY LIST_ENTRY;

/* 37 */
struct _DISPATCHER_HEADER
{
  union
  {
    union
    {
      volatile LONG Lock;
      LONG LockNV;
    };
    struct
    {
      UCHAR Type;
      UCHAR Signalling;
      UCHAR Size;
      UCHAR Reserved1;
    };
    struct
    {
      UCHAR TimerType;
      union
      {
        UCHAR TimerControlFlags;
        struct
        {
          unsigned __int8 Absolute : 1;
          unsigned __int8 Wake : 1;
          unsigned __int8 EncodedTolerableDelay : 6;
        };
      };
      UCHAR Hand;
      union
      {
        UCHAR TimerMiscFlags;
        struct
        {
          unsigned __int8 Index : 6;
          unsigned __int8 Inserted : 1;
          unsigned __int8 Expired : 1;
        };
      };
    };
    struct
    {
      UCHAR Timer2Type;
      union
      {
        UCHAR Timer2Flags;
        struct
        {
          unsigned __int8 Timer2Inserted : 1;
          unsigned __int8 Timer2Expiring : 1;
          unsigned __int8 Timer2CancelPending : 1;
          unsigned __int8 Timer2SetPending : 1;
          unsigned __int8 Timer2Running : 1;
          unsigned __int8 Timer2Disabled : 1;
          unsigned __int8 Timer2ReservedFlags : 2;
        };
      };
      UCHAR Timer2ComponentId;
      UCHAR Timer2RelativeId;
    };
    struct
    {
      UCHAR QueueType;
      union
      {
        UCHAR QueueControlFlags;
        struct
        {
          unsigned __int8 Abandoned : 1;
          unsigned __int8 DisableIncrement : 1;
          unsigned __int8 QueueReservedControlFlags : 6;
        };
      };
      UCHAR QueueSize;
      UCHAR QueueReserved;
    };
    struct
    {
      UCHAR ThreadType;
      UCHAR ThreadReserved;
      union
      {
        UCHAR ThreadControlFlags;
        struct
        {
          unsigned __int8 CycleProfiling : 1;
          unsigned __int8 CounterProfiling : 1;
          unsigned __int8 GroupScheduling : 1;
          unsigned __int8 AffinitySet : 1;
          unsigned __int8 Tagged : 1;
          unsigned __int8 EnergyProfiling : 1;
          unsigned __int8 SchedulerAssist : 1;
          unsigned __int8 ThreadReservedControlFlags : 1;
        };
      };
      union
      {
        UCHAR DebugActive;
        struct
        {
          unsigned __int8 ActiveDR7 : 1;
          unsigned __int8 Instrumented : 1;
          unsigned __int8 Minimal : 1;
          unsigned __int8 Reserved4 : 3;
          unsigned __int8 UmsScheduled : 1;
          unsigned __int8 UmsPrimary : 1;
        };
      };
    };
    struct
    {
      UCHAR MutantType;
      UCHAR MutantSize;
      BOOLEAN DpcActive;
      UCHAR MutantReserved;
    };
  };
  LONG SignalState;
  LIST_ENTRY WaitListHead;
};

/* 36 */
typedef struct _DISPATCHER_HEADER DISPATCHER_HEADER;

/* 35 */
struct _KEVENT
{
  DISPATCHER_HEADER Header;
};

/* 34 */
typedef struct _KEVENT KEVENT;

/* 32 */
struct _FAST_MUTEX
{
  LONG Count;
  PVOID Owner;
  ULONG Contention;
  KEVENT Event;
  ULONG OldIrql;
};

/* 61 */
typedef void *HANDLE;

/* 62 */
typedef struct _UNICODE_STRING *PUNICODE_STRING;

/* 60 */
struct _OBJECT_ATTRIBUTES
{
  ULONG Length;
  HANDLE RootDirectory;
  PUNICODE_STRING ObjectName;
  ULONG Attributes;
  PVOID SecurityDescriptor;
  PVOID SecurityQualityOfService;
};

/* 64 */
typedef WCHAR *PWSTR;

/* 63 */
struct _UNICODE_STRING
{
  USHORT Length;
  USHORT MaximumLength;
  PWSTR Buffer;
};

/* 65 */
struct _FILE_NETWORK_OPEN_INFORMATION
{
  LARGE_INTEGER CreationTime;
  LARGE_INTEGER LastAccessTime;
  LARGE_INTEGER LastWriteTime;
  LARGE_INTEGER ChangeTime;
  LARGE_INTEGER AllocationSize;
  LARGE_INTEGER EndOfFile;
  ULONG FileAttributes;
};

/* 68 */
typedef int NTSTATUS;

/* 67 */
union _IO_STATUS_BLOCK::$77CEE0AF02806C16F943E6B3BF8ECA77
{
  NTSTATUS Status;
  PVOID Pointer;
};

/* 66 */
struct _IO_STATUS_BLOCK
{
  union
  {
    NTSTATUS Status;
    PVOID Pointer;
  };
  ULONG_PTR Information;
};

/* 69 */
typedef struct _STRING STRING;

/* 72 */
typedef char CHAR;

/* 71 */
typedef CHAR *PCHAR;

/* 70 */
struct _STRING
{
  USHORT Length;
  USHORT MaximumLength;
  PCHAR Buffer;
};

/* 74 */
enum _FILE_INFORMATION_CLASS
{
  FileDirectoryInformation = 0x1,
  FileFullDirectoryInformation = 0x2,
  FileBothDirectoryInformation = 0x3,
  FileBasicInformation = 0x4,
  FileStandardInformation = 0x5,
  FileInternalInformation = 0x6,
  FileEaInformation = 0x7,
  FileAccessInformation = 0x8,
  FileNameInformation = 0x9,
  FileRenameInformation = 0xA,
  FileLinkInformation = 0xB,
  FileNamesInformation = 0xC,
  FileDispositionInformation = 0xD,
  FilePositionInformation = 0xE,
  FileFullEaInformation = 0xF,
  FileModeInformation = 0x10,
  FileAlignmentInformation = 0x11,
  FileAllInformation = 0x12,
  FileAllocationInformation = 0x13,
  FileEndOfFileInformation = 0x14,
  FileAlternateNameInformation = 0x15,
  FileStreamInformation = 0x16,
  FilePipeInformation = 0x17,
  FilePipeLocalInformation = 0x18,
  FilePipeRemoteInformation = 0x19,
  FileMailslotQueryInformation = 0x1A,
  FileMailslotSetInformation = 0x1B,
  FileCompressionInformation = 0x1C,
  FileObjectIdInformation = 0x1D,
  FileCompletionInformation = 0x1E,
  FileMoveClusterInformation = 0x1F,
  FileQuotaInformation = 0x20,
  FileReparsePointInformation = 0x21,
  FileNetworkOpenInformation = 0x22,
  FileAttributeTagInformation = 0x23,
  FileTrackingInformation = 0x24,
  FileIdBothDirectoryInformation = 0x25,
  FileIdFullDirectoryInformation = 0x26,
  FileValidDataLengthInformation = 0x27,
  FileShortNameInformation = 0x28,
  FileIoCompletionNotificationInformation = 0x29,
  FileIoStatusBlockRangeInformation = 0x2A,
  FileIoPriorityHintInformation = 0x2B,
  FileSfioReserveInformation = 0x2C,
  FileSfioVolumeInformation = 0x2D,
  FileHardLinkInformation = 0x2E,
  FileProcessIdsUsingFileInformation = 0x2F,
  FileNormalizedNameInformation = 0x30,
  FileNetworkPhysicalNameInformation = 0x31,
  FileIdGlobalTxDirectoryInformation = 0x32,
  FileIsRemoteDeviceInformation = 0x33,
  FileUnusedInformation = 0x34,
  FileNumaNodeInformation = 0x35,
  FileStandardLinkInformation = 0x36,
  FileRemoteProtocolInformation = 0x37,
  FileMaximumInformation = 0x38,
};

/* 73 */
typedef enum _FILE_INFORMATION_CLASS FILE_INFORMATION_CLASS;

/* 75 */
typedef struct _FLT_REGISTRATION FLT_REGISTRATION;

/* 77 */
typedef ULONG FLT_REGISTRATION_FLAGS;

/* 78 */
typedef struct _FLT_CONTEXT_REGISTRATION FLT_CONTEXT_REGISTRATION;

/* 89 */
typedef struct _FLT_OPERATION_REGISTRATION FLT_OPERATION_REGISTRATION;

/* 501 */
typedef ULONG FLT_FILTER_UNLOAD_FLAGS;

/* 500 */
typedef NTSTATUS (__stdcall *PFLT_FILTER_UNLOAD_CALLBACK)(FLT_FILTER_UNLOAD_FLAGS Flags);

/* 488 */
typedef const struct _FLT_RELATED_OBJECTS *PCFLT_RELATED_OBJECTS;

/* 503 */
typedef ULONG FLT_INSTANCE_SETUP_FLAGS;

/* 505 */
enum _FLT_FILESYSTEM_TYPE
{
  FLT_FSTYPE_UNKNOWN = 0x0,
  FLT_FSTYPE_RAW = 0x1,
  FLT_FSTYPE_NTFS = 0x2,
  FLT_FSTYPE_FAT = 0x3,
  FLT_FSTYPE_CDFS = 0x4,
  FLT_FSTYPE_UDFS = 0x5,
  FLT_FSTYPE_LANMAN = 0x6,
  FLT_FSTYPE_WEBDAV = 0x7,
  FLT_FSTYPE_RDPDR = 0x8,
  FLT_FSTYPE_NFS = 0x9,
  FLT_FSTYPE_MS_NETWARE = 0xA,
  FLT_FSTYPE_NETWARE = 0xB,
  FLT_FSTYPE_BSUDF = 0xC,
  FLT_FSTYPE_MUP = 0xD,
  FLT_FSTYPE_RSFX = 0xE,
  FLT_FSTYPE_ROXIO_UDF1 = 0xF,
  FLT_FSTYPE_ROXIO_UDF2 = 0x10,
  FLT_FSTYPE_ROXIO_UDF3 = 0x11,
  FLT_FSTYPE_TACIT = 0x12,
  FLT_FSTYPE_FS_REC = 0x13,
  FLT_FSTYPE_INCD = 0x14,
  FLT_FSTYPE_INCD_FAT = 0x15,
  FLT_FSTYPE_EXFAT = 0x16,
  FLT_FSTYPE_PSFS = 0x17,
  FLT_FSTYPE_GPFS = 0x18,
  FLT_FSTYPE_NPFS = 0x19,
  FLT_FSTYPE_MSFS = 0x1A,
  FLT_FSTYPE_CSVFS = 0x1B,
  FLT_FSTYPE_REFS = 0x1C,
  FLT_FSTYPE_OPENAFS = 0x1D,
};

/* 504 */
typedef enum _FLT_FILESYSTEM_TYPE FLT_FILESYSTEM_TYPE;

/* 502 */
typedef NTSTATUS (__stdcall *PFLT_INSTANCE_SETUP_CALLBACK)(PCFLT_RELATED_OBJECTS FltObjects, FLT_INSTANCE_SETUP_FLAGS Flags, ULONG VolumeDeviceType, FLT_FILESYSTEM_TYPE VolumeFilesystemType);

/* 507 */
typedef ULONG FLT_INSTANCE_QUERY_TEARDOWN_FLAGS;

/* 506 */
typedef NTSTATUS (__stdcall *PFLT_INSTANCE_QUERY_TEARDOWN_CALLBACK)(PCFLT_RELATED_OBJECTS FltObjects, FLT_INSTANCE_QUERY_TEARDOWN_FLAGS Flags);

/* 509 */
typedef ULONG FLT_INSTANCE_TEARDOWN_FLAGS;

/* 508 */
typedef void (__stdcall *PFLT_INSTANCE_TEARDOWN_CALLBACK)(PCFLT_RELATED_OBJECTS FltObjects, FLT_INSTANCE_TEARDOWN_FLAGS Reason);

/* 416 */
typedef struct _FLT_INSTANCE *PFLT_INSTANCE;

/* 99 */
typedef struct _FILE_OBJECT *PFILE_OBJECT;

/* 93 */
typedef struct _FLT_CALLBACK_DATA *PFLT_CALLBACK_DATA;

/* 511 */
typedef ULONG FLT_FILE_NAME_OPTIONS;

/* 512 */
typedef unsigned __int8 *PBOOLEAN;

/* 513 */
typedef struct _FLT_NAME_CONTROL *PFLT_NAME_CONTROL;

/* 510 */
typedef NTSTATUS (__stdcall *PFLT_GENERATE_FILE_NAME)(PFLT_INSTANCE Instance, PFILE_OBJECT FileObject, PFLT_CALLBACK_DATA CallbackData, FLT_FILE_NAME_OPTIONS NameOptions, PBOOLEAN CacheFileNameInformation, PFLT_NAME_CONTROL FileName);

/* 109 */
typedef struct _UNICODE_STRING UNICODE_STRING;

/* 516 */
typedef const UNICODE_STRING *PCUNICODE_STRING;

/* 517 */
typedef struct _FILE_NAMES_INFORMATION *PFILE_NAMES_INFORMATION;

/* 519 */
typedef ULONG FLT_NORMALIZE_NAME_FLAGS;

/* 515 */
typedef NTSTATUS (__stdcall *PFLT_NORMALIZE_NAME_COMPONENT)(PFLT_INSTANCE Instance, PCUNICODE_STRING ParentDirectory, USHORT VolumeNameLength, PCUNICODE_STRING Component, PFILE_NAMES_INFORMATION ExpandComponentName, ULONG ExpandComponentNameLength, FLT_NORMALIZE_NAME_FLAGS Flags, PVOID *NormalizationContext);

/* 520 */
typedef void (__stdcall *PFLT_NORMALIZE_CONTEXT_CLEANUP)(PVOID *NormalizationContext);

/* 83 */
typedef PVOID PFLT_CONTEXT;

/* 521 */
typedef NTSTATUS (__stdcall *PFLT_TRANSACTION_NOTIFICATION_CALLBACK)(PCFLT_RELATED_OBJECTS FltObjects, PFLT_CONTEXT TransactionContext, ULONG NotificationMask);

/* 522 */
typedef NTSTATUS (__stdcall *PFLT_NORMALIZE_NAME_COMPONENT_EX)(PFLT_INSTANCE Instance, PFILE_OBJECT FileObject, PCUNICODE_STRING ParentDirectory, USHORT VolumeNameLength, PCUNICODE_STRING Component, PFILE_NAMES_INFORMATION ExpandComponentName, ULONG ExpandComponentNameLength, FLT_NORMALIZE_NAME_FLAGS Flags, PVOID *NormalizationContext);

/* 76 */
struct _FLT_REGISTRATION
{
  USHORT Size;
  USHORT Version;
  FLT_REGISTRATION_FLAGS Flags;
  const FLT_CONTEXT_REGISTRATION *ContextRegistration;
  const FLT_OPERATION_REGISTRATION *OperationRegistration;
  PFLT_FILTER_UNLOAD_CALLBACK FilterUnloadCallback;
  PFLT_INSTANCE_SETUP_CALLBACK InstanceSetupCallback;
  PFLT_INSTANCE_QUERY_TEARDOWN_CALLBACK InstanceQueryTeardownCallback;
  PFLT_INSTANCE_TEARDOWN_CALLBACK InstanceTeardownStartCallback;
  PFLT_INSTANCE_TEARDOWN_CALLBACK InstanceTeardownCompleteCallback;
  PFLT_GENERATE_FILE_NAME GenerateFileNameCallback;
  PFLT_NORMALIZE_NAME_COMPONENT NormalizeNameComponentCallback;
  PFLT_NORMALIZE_CONTEXT_CLEANUP NormalizeContextCleanupCallback;
  PFLT_TRANSACTION_NOTIFICATION_CALLBACK TransactionNotificationCallback;
  PFLT_NORMALIZE_NAME_COMPONENT_EX NormalizeNameComponentExCallback;
};

/* 80 */
typedef USHORT FLT_CONTEXT_TYPE;

/* 81 */
typedef USHORT FLT_CONTEXT_REGISTRATION_FLAGS;

/* 82 */
typedef void (__stdcall *PFLT_CONTEXT_CLEANUP_CALLBACK)(PFLT_CONTEXT Context, FLT_CONTEXT_TYPE ContextType);

/* 84 */
typedef ULONG_PTR SIZE_T;

/* 87 */
enum _POOL_TYPE
{
  NonPagedPool = 0x0,
  PagedPool = 0x1,
  NonPagedPoolMustSucceed = 0x2,
  DontUseThisType = 0x3,
  NonPagedPoolCacheAligned = 0x4,
  PagedPoolCacheAligned = 0x5,
  NonPagedPoolCacheAlignedMustS = 0x6,
  MaxPoolType = 0x7,
  NonPagedPoolSession = 0x20,
  PagedPoolSession = 0x21,
  NonPagedPoolMustSucceedSession = 0x22,
  DontUseThisTypeSession = 0x23,
  NonPagedPoolCacheAlignedSession = 0x24,
  PagedPoolCacheAlignedSession = 0x25,
  NonPagedPoolCacheAlignedMustSSession = 0x26,
};

/* 86 */
typedef enum _POOL_TYPE POOL_TYPE;

/* 85 */
typedef PVOID (__stdcall *PFLT_CONTEXT_ALLOCATE_CALLBACK)(POOL_TYPE PoolType, SIZE_T Size, FLT_CONTEXT_TYPE ContextType);

/* 88 */
typedef void (__stdcall *PFLT_CONTEXT_FREE_CALLBACK)(PVOID Pool, FLT_CONTEXT_TYPE ContextType);

/* 79 */
struct _FLT_CONTEXT_REGISTRATION
{
  FLT_CONTEXT_TYPE ContextType;
  FLT_CONTEXT_REGISTRATION_FLAGS Flags;
  PFLT_CONTEXT_CLEANUP_CALLBACK ContextCleanupCallback;
  SIZE_T Size;
  ULONG PoolTag;
  PFLT_CONTEXT_ALLOCATE_CALLBACK ContextAllocateCallback;
  PFLT_CONTEXT_FREE_CALLBACK ContextFreeCallback;
  PVOID Reserved1;
};

/* 91 */
typedef ULONG FLT_OPERATION_REGISTRATION_FLAGS;

/* 495 */
enum _FLT_PREOP_CALLBACK_STATUS
{
  FLT_PREOP_SUCCESS_WITH_CALLBACK = 0x0,
  FLT_PREOP_SUCCESS_NO_CALLBACK = 0x1,
  FLT_PREOP_PENDING = 0x2,
  FLT_PREOP_DISALLOW_FASTIO = 0x3,
  FLT_PREOP_COMPLETE = 0x4,
  FLT_PREOP_SYNCHRONIZE = 0x5,
  FLT_PREOP_DISALLOW_FSFILTER_IO = 0x6,
};

/* 494 */
typedef enum _FLT_PREOP_CALLBACK_STATUS FLT_PREOP_CALLBACK_STATUS;

/* 92 */
typedef FLT_PREOP_CALLBACK_STATUS (__stdcall *PFLT_PRE_OPERATION_CALLBACK)(PFLT_CALLBACK_DATA Data, PCFLT_RELATED_OBJECTS FltObjects, PVOID *CompletionContext);

/* 499 */
enum _FLT_POSTOP_CALLBACK_STATUS
{
  FLT_POSTOP_FINISHED_PROCESSING = 0x0,
  FLT_POSTOP_MORE_PROCESSING_REQUIRED = 0x1,
  FLT_POSTOP_DISALLOW_FSFILTER_IO = 0x2,
};

/* 498 */
typedef enum _FLT_POSTOP_CALLBACK_STATUS FLT_POSTOP_CALLBACK_STATUS;

/* 497 */
typedef ULONG FLT_POST_OPERATION_FLAGS;

/* 496 */
typedef FLT_POSTOP_CALLBACK_STATUS (__stdcall *PFLT_POST_OPERATION_CALLBACK)(PFLT_CALLBACK_DATA Data, PCFLT_RELATED_OBJECTS FltObjects, PVOID CompletionContext, FLT_POST_OPERATION_FLAGS Flags);

/* 90 */
struct _FLT_OPERATION_REGISTRATION
{
  UCHAR MajorFunction;
  FLT_OPERATION_REGISTRATION_FLAGS Flags;
  PFLT_PRE_OPERATION_CALLBACK PreOperation;
  PFLT_POST_OPERATION_CALLBACK PostOperation;
  PVOID Reserved1;
};

/* 490 */
typedef struct _FLT_FILTER *PFLT_FILTER;

/* 491 */
typedef struct _FLT_VOLUME *PFLT_VOLUME;

/* 492 */
typedef struct _KTRANSACTION *PKTRANSACTION;

/* 489 */
struct _FLT_RELATED_OBJECTS
{
  const USHORT Size;
  const USHORT TransactionContext;
  const PFLT_FILTER Filter;
  const PFLT_VOLUME Volume;
  const PFLT_INSTANCE Instance;
  const PFILE_OBJECT FileObject;
  const PKTRANSACTION Transaction;
};

/* 101 */
typedef __int16 CSHORT;

/* 102 */
typedef struct _DEVICE_OBJECT *PDEVICE_OBJECT;

/* 257 */
typedef struct _VPB *PVPB;

/* 412 */
typedef struct _SECTION_OBJECT_POINTERS SECTION_OBJECT_POINTERS;

/* 411 */
typedef SECTION_OBJECT_POINTERS *PSECTION_OBJECT_POINTERS;

/* 414 */
typedef struct _IO_COMPLETION_CONTEXT *PIO_COMPLETION_CONTEXT;

/* 160 */
typedef ULONG_PTR KSPIN_LOCK;

/* 100 */
struct _FILE_OBJECT
{
  CSHORT Type;
  CSHORT Size;
  PDEVICE_OBJECT DeviceObject;
  PVPB Vpb;
  PVOID FsContext;
  PVOID FsContext2;
  PSECTION_OBJECT_POINTERS SectionObjectPointer;
  PVOID PrivateCacheMap;
  NTSTATUS FinalStatus;
  struct _FILE_OBJECT *RelatedFileObject;
  BOOLEAN LockOperation;
  BOOLEAN DeletePending;
  BOOLEAN ReadAccess;
  BOOLEAN WriteAccess;
  BOOLEAN DeleteAccess;
  BOOLEAN SharedRead;
  BOOLEAN SharedWrite;
  BOOLEAN SharedDelete;
  ULONG Flags;
  UNICODE_STRING FileName;
  LARGE_INTEGER CurrentByteOffset;
  ULONG Waiters;
  ULONG Busy;
  PVOID LastLock;
  KEVENT Lock;
  KEVENT Event;
  PIO_COMPLETION_CONTEXT CompletionContext;
  KSPIN_LOCK IrpListLock;
  LIST_ENTRY IrpList;
  PVOID FileObjectExtension;
};

/* 95 */
typedef ULONG FLT_CALLBACK_DATA_FLAGS;

/* 96 */
typedef struct _KTHREAD *PETHREAD;

/* 97 */
typedef struct _FLT_IO_PARAMETER_BLOCK *PFLT_IO_PARAMETER_BLOCK;

/* 184 */
typedef struct _IO_STATUS_BLOCK IO_STATUS_BLOCK;

/* 487 */
struct _FLT_CALLBACK_DATA::$312C66EF40AEDAF2A3A5D4554FF51F28::$AF593265884A231A5F64AB3E7AB0774C
{
  LIST_ENTRY QueueLinks;
  PVOID QueueContext[2];
};

/* 486 */
union _FLT_CALLBACK_DATA::$312C66EF40AEDAF2A3A5D4554FF51F28
{
  struct
  {
    LIST_ENTRY QueueLinks;
    PVOID QueueContext[2];
  };
  PVOID FilterContext[4];
};

/* 186 */
typedef char CCHAR;

/* 185 */
typedef CCHAR KPROCESSOR_MODE;

/* 94 */
struct _FLT_CALLBACK_DATA
{
  FLT_CALLBACK_DATA_FLAGS Flags;
  const PETHREAD Thread;
  const PFLT_IO_PARAMETER_BLOCK Iopb;
  IO_STATUS_BLOCK IoStatus;
  struct _FLT_TAG_DATA_BUFFER *TagData;
  union
  {
    struct
    {
      LIST_ENTRY QueueLinks;
      PVOID QueueContext[2];
    };
    PVOID FilterContext[4];
  };
  KPROCESSOR_MODE RequestorMode;
};

/* 514 */
struct _FLT_NAME_CONTROL
{
  UNICODE_STRING Name;
};

/* 518 */
struct _FILE_NAMES_INFORMATION
{
  ULONG NextEntryOffset;
  ULONG FileIndex;
  ULONG FileNameLength;
  WCHAR FileName[1];
};

/* 493 */
struct _KTRANSACTION;

/* 386 */
typedef struct _IO_TIMER *PIO_TIMER;

/* 199 */
struct _KDEVICE_QUEUE_ENTRY
{
  LIST_ENTRY DeviceListEntry;
  ULONG SortKey;
  BOOLEAN Inserted;
};

/* 198 */
typedef struct _KDEVICE_QUEUE_ENTRY KDEVICE_QUEUE_ENTRY;

/* 391 */
struct _WAIT_CONTEXT_BLOCK::$25036D26EC3128001C844A9BD42D8664::$F03CBEE8C81F93D549DFD49A4693D244
{
  LIST_ENTRY DmaWaitEntry;
  ULONG NumberOfChannels;
  unsigned __int32 SyncCallback : 1;
  unsigned __int32 DmaContext : 1;
  unsigned __int32 ZeroMapRegisters : 1;
  unsigned __int32 Reserved : 9;
  unsigned __int32 NumberOfRemapPages : 20;
};

/* 390 */
union _WAIT_CONTEXT_BLOCK::$25036D26EC3128001C844A9BD42D8664
{
  KDEVICE_QUEUE_ENTRY WaitQueueEntry;
  struct
  {
    LIST_ENTRY DmaWaitEntry;
    ULONG NumberOfChannels;
    unsigned __int32 SyncCallback : 1;
    unsigned __int32 DmaContext : 1;
    unsigned __int32 ZeroMapRegisters : 1;
    unsigned __int32 Reserved : 9;
    unsigned __int32 NumberOfRemapPages : 20;
  };
};

/* 395 */
enum _IO_ALLOCATION_ACTION
{
  KeepObject = 0x1,
  DeallocateObject = 0x2,
  DeallocateObjectKeepRegisters = 0x3,
};

/* 394 */
typedef enum _IO_ALLOCATION_ACTION IO_ALLOCATION_ACTION;

/* 393 */
typedef IO_ALLOCATION_ACTION __stdcall DRIVER_CONTROL(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp, PVOID MapRegisterBase, PVOID Context);

/* 392 */
typedef DRIVER_CONTROL *PDRIVER_CONTROL;

/* 396 */
typedef struct _KDPC *PKDPC;

/* 389 */
struct _WAIT_CONTEXT_BLOCK
{
  union
  {
    KDEVICE_QUEUE_ENTRY WaitQueueEntry;
    struct
    {
      LIST_ENTRY DmaWaitEntry;
      ULONG NumberOfChannels;
      unsigned __int32 SyncCallback : 1;
      unsigned __int32 DmaContext : 1;
      unsigned __int32 ZeroMapRegisters : 1;
      unsigned __int32 Reserved : 9;
      unsigned __int32 NumberOfRemapPages : 20;
    };
  };
  PDRIVER_CONTROL DeviceRoutine;
  PVOID DeviceContext;
  ULONG NumberOfMapRegisters;
  PVOID DeviceObject;
  PVOID CurrentIrp;
  PKDPC BufferChainingDpc;
};

/* 388 */
typedef struct _WAIT_CONTEXT_BLOCK WAIT_CONTEXT_BLOCK;

/* 387 */
union _DEVICE_OBJECT::$3ABEFC84562B0417329DFE2AD83813CB
{
  LIST_ENTRY ListEntry;
  WAIT_CONTEXT_BLOCK Wcb;
};

/* 407 */
struct _KDEVICE_QUEUE::$9FAF936D47973D5FBAA72DAF24011AE0::$18E3EACC1E717291AA7C720ECCD5C45C
{
  __int64 Reserved : 8;
  __int64 Hint : 56;
};

/* 406 */
union _KDEVICE_QUEUE::$9FAF936D47973D5FBAA72DAF24011AE0
{
  BOOLEAN Busy;
  struct
  {
    __int64 Reserved : 8;
    __int64 Hint : 56;
  };
};

/* 405 */
struct _KDEVICE_QUEUE
{
  CSHORT Type;
  CSHORT Size;
  LIST_ENTRY DeviceListHead;
  KSPIN_LOCK Lock;
  union
  {
    BOOLEAN Busy;
    struct
    {
      __int64 Reserved : 8;
      __int64 Hint : 56;
    };
  };
};

/* 404 */
typedef struct _KDEVICE_QUEUE KDEVICE_QUEUE;

/* 399 */
struct _KDPC::$6963FFE55BC4627E7AE37E9650A61BA0::$11C356C5F0E6BDA2274B3634F305E8EF
{
  UCHAR Type;
  UCHAR Importance;
  volatile USHORT Number;
};

/* 398 */
union _KDPC::$6963FFE55BC4627E7AE37E9650A61BA0
{
  ULONG TargetInfoAsUlong;
  struct
  {
    UCHAR Type;
    UCHAR Importance;
    volatile USHORT Number;
  };
};

/* 401 */
struct _SINGLE_LIST_ENTRY
{
  struct _SINGLE_LIST_ENTRY *Next;
};

/* 400 */
typedef struct _SINGLE_LIST_ENTRY SINGLE_LIST_ENTRY;

/* 403 */
typedef void __stdcall KDEFERRED_ROUTINE(struct _KDPC *Dpc, PVOID DeferredContext, PVOID SystemArgument1, PVOID SystemArgument2);

/* 402 */
typedef KDEFERRED_ROUTINE *PKDEFERRED_ROUTINE;

/* 397 */
struct _KDPC
{
  union
  {
    ULONG TargetInfoAsUlong;
    struct
    {
      UCHAR Type;
      UCHAR Importance;
      volatile USHORT Number;
    };
  };
  SINGLE_LIST_ENTRY DpcListEntry;
  KAFFINITY ProcessorHistory;
  PKDEFERRED_ROUTINE DeferredRoutine;
  PVOID DeferredContext;
  PVOID SystemArgument1;
  PVOID SystemArgument2;
  PVOID DpcData;
};

/* 408 */
typedef struct _KDPC KDPC;

/* 221 */
typedef PVOID PSECURITY_DESCRIPTOR;

/* 103 */
struct __declspec(align(16)) _DEVICE_OBJECT
{
  CSHORT Type;
  USHORT Size;
  LONG ReferenceCount;
  struct _DRIVER_OBJECT *DriverObject;
  struct _DEVICE_OBJECT *NextDevice;
  struct _DEVICE_OBJECT *AttachedDevice;
  struct _IRP *CurrentIrp;
  PIO_TIMER Timer;
  ULONG Flags;
  ULONG Characteristics;
  PVPB Vpb;
  PVOID DeviceExtension;
  ULONG DeviceType;
  CCHAR StackSize;
  union _DEVICE_OBJECT::$3ABEFC84562B0417329DFE2AD83813CB Queue;
  ULONG AlignmentRequirement;
  KDEVICE_QUEUE DeviceQueue;
  KDPC Dpc;
  ULONG ActiveThreadCount;
  PSECURITY_DESCRIPTOR SecurityDescriptor;
  KEVENT DeviceLock;
  USHORT SectorSize;
  USHORT Spare1;
  struct _DEVOBJ_EXTENSION *DeviceObjectExtension;
  PVOID Reserved;
};

/* 258 */
struct _VPB
{
  CSHORT Type;
  CSHORT Size;
  USHORT Flags;
  USHORT VolumeLabelLength;
  struct _DEVICE_OBJECT *DeviceObject;
  struct _DEVICE_OBJECT *RealDevice;
  ULONG SerialNumber;
  ULONG ReferenceCount;
  WCHAR VolumeLabel[32];
};

/* 413 */
struct _SECTION_OBJECT_POINTERS
{
  PVOID DataSectionObject;
  PVOID SharedCacheMap;
  PVOID ImageSectionObject;
};

/* 415 */
struct _IO_COMPLETION_CONTEXT
{
  PVOID Port;
  PVOID Key;
};

/* 206 */
typedef struct _IO_SECURITY_CONTEXT *PIO_SECURITY_CONTEXT;

/* 419 */
struct _FLT_PARAMETERS::$2D0EF737506A31CF526E95DF6E6C385F
{
  PIO_SECURITY_CONTEXT SecurityContext;
  ULONG Options;
  __declspec(align(8)) USHORT FileAttributes;
  USHORT ShareAccess;
  __declspec(align(8)) ULONG EaLength;
  PVOID EaBuffer;
  LARGE_INTEGER AllocationSize;
};

/* 420 */
struct _FLT_PARAMETERS::$77BD7C9E05D513C0ECE9AEB1E74EF34D
{
  PIO_SECURITY_CONTEXT SecurityContext;
  ULONG Options;
  __declspec(align(8)) USHORT Reserved;
  USHORT ShareAccess;
  PVOID Parameters;
};

/* 163 */
typedef struct _MDL *PMDL;

/* 421 */
struct _FLT_PARAMETERS::$4C1DDE0E7F75A0050C08EC15CDFA5486
{
  ULONG Length;
  __declspec(align(8)) ULONG Key;
  LARGE_INTEGER ByteOffset;
  PVOID ReadBuffer;
  PMDL MdlAddress;
};

/* 422 */
struct _FLT_PARAMETERS::$76ACCD59B9FA4006BFE8EAB4646DA7D5
{
  ULONG Length;
  __declspec(align(8)) ULONG Key;
  LARGE_INTEGER ByteOffset;
  PVOID WriteBuffer;
  PMDL MdlAddress;
};

/* 423 */
struct _FLT_PARAMETERS::$6362CED5365C795A362AD07A7B22D512
{
  ULONG Length;
  __declspec(align(8)) FILE_INFORMATION_CLASS FileInformationClass;
  PVOID InfoBuffer;
};

/* 426 */
struct _FLT_PARAMETERS::$::$5EC0DA9471CFCB1EC49AD6D2337964D2::$5395532E35CA13A919E63C6E41FE24BB
{
  BOOLEAN ReplaceIfExists;
  BOOLEAN AdvanceOnly;
};

/* 425 */
union _FLT_PARAMETERS::$983E91713E4B44CE00B355D2B1AA9C70::$5EC0DA9471CFCB1EC49AD6D2337964D2
{
  struct
  {
    BOOLEAN ReplaceIfExists;
    BOOLEAN AdvanceOnly;
  };
  ULONG ClusterCount;
  HANDLE DeleteHandle;
};

/* 424 */
struct _FLT_PARAMETERS::$983E91713E4B44CE00B355D2B1AA9C70
{
  ULONG Length;
  __declspec(align(8)) FILE_INFORMATION_CLASS FileInformationClass;
  PFILE_OBJECT ParentOfTarget;
  union
  {
    struct
    {
      BOOLEAN ReplaceIfExists;
      BOOLEAN AdvanceOnly;
    };
    ULONG ClusterCount;
    HANDLE DeleteHandle;
  };
  PVOID InfoBuffer;
};

/* 427 */
struct _FLT_PARAMETERS::$C160961485644FAA31DF20F0C3BCC9F6
{
  ULONG Length;
  PVOID EaList;
  ULONG EaListLength;
  __declspec(align(8)) ULONG EaIndex;
  PVOID EaBuffer;
  PMDL MdlAddress;
};

/* 428 */
struct _FLT_PARAMETERS::$AFAE931016418FD1718C58C39C98E785
{
  ULONG Length;
  PVOID EaBuffer;
  PMDL MdlAddress;
};

/* 249 */
enum _FSINFOCLASS
{
  FileFsVolumeInformation = 0x1,
  FileFsLabelInformation = 0x2,
  FileFsSizeInformation = 0x3,
  FileFsDeviceInformation = 0x4,
  FileFsAttributeInformation = 0x5,
  FileFsControlInformation = 0x6,
  FileFsFullSizeInformation = 0x7,
  FileFsObjectIdInformation = 0x8,
  FileFsDriverPathInformation = 0x9,
  FileFsMaximumInformation = 0xA,
};

/* 248 */
typedef enum _FSINFOCLASS FS_INFORMATION_CLASS;

/* 429 */
struct _FLT_PARAMETERS::$257C6F32E092536D9FEE04CC14ADB5D9
{
  ULONG Length;
  __declspec(align(8)) FS_INFORMATION_CLASS FsInformationClass;
  PVOID VolumeBuffer;
};

/* 431 */
struct _FLT_PARAMETERS::$70383F8762D96C93832E3BF9BC8D7030::$897E123E376E6AE5E55F028AE1FF01E3
{
  ULONG Length;
  PUNICODE_STRING FileName;
  FILE_INFORMATION_CLASS FileInformationClass;
  __declspec(align(8)) ULONG FileIndex;
  PVOID DirectoryBuffer;
  PMDL MdlAddress;
};

/* 432 */
struct _FLT_PARAMETERS::$70383F8762D96C93832E3BF9BC8D7030::$368EE427F931BEE4C50BBFCC2A39135B
{
  ULONG Length;
  __declspec(align(8)) ULONG CompletionFilter;
  __declspec(align(8)) ULONG Spare1;
  __declspec(align(8)) ULONG Spare2;
  PVOID DirectoryBuffer;
  PMDL MdlAddress;
};

/* 240 */
enum _DIRECTORY_NOTIFY_INFORMATION_CLASS
{
  DirectoryNotifyInformation = 0x1,
  DirectoryNotifyExtendedInformation = 0x2,
};

/* 239 */
typedef enum _DIRECTORY_NOTIFY_INFORMATION_CLASS DIRECTORY_NOTIFY_INFORMATION_CLASS;

/* 433 */
struct _FLT_PARAMETERS::$70383F8762D96C93832E3BF9BC8D7030::$91C3A37D3EB1DA2217C2F5F92F33CAE6
{
  ULONG Length;
  __declspec(align(8)) ULONG CompletionFilter;
  __declspec(align(8)) DIRECTORY_NOTIFY_INFORMATION_CLASS DirectoryNotifyInformationClass;
  __declspec(align(8)) ULONG Spare2;
  PVOID DirectoryBuffer;
  PMDL MdlAddress;
};

/* 430 */
union _FLT_PARAMETERS::$70383F8762D96C93832E3BF9BC8D7030
{
  struct _FLT_PARAMETERS::$70383F8762D96C93832E3BF9BC8D7030::$897E123E376E6AE5E55F028AE1FF01E3 QueryDirectory;
  struct _FLT_PARAMETERS::$70383F8762D96C93832E3BF9BC8D7030::$368EE427F931BEE4C50BBFCC2A39135B NotifyDirectory;
  struct _FLT_PARAMETERS::$70383F8762D96C93832E3BF9BC8D7030::$91C3A37D3EB1DA2217C2F5F92F33CAE6 NotifyDirectoryEx;
};

/* 435 */
struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$FA02ECF11A69AC1E6B191DC34CAEB912
{
  PVPB Vpb;
  PDEVICE_OBJECT DeviceObject;
};

/* 436 */
struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$0B5EA8E8929008E258578A76B6BE23DC
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG FsControlCode;
};

/* 437 */
struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$76050F9BF03608861C405655625E7834
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG FsControlCode;
  PVOID InputBuffer;
  PVOID OutputBuffer;
  PMDL OutputMdlAddress;
};

/* 438 */
struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$49E9EB252B572CB315A7FBEA0300B2A3
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG FsControlCode;
  PVOID SystemBuffer;
};

/* 439 */
struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$00C4EDCD47B29C4393BFBA5C35C451F3
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG FsControlCode;
  PVOID InputSystemBuffer;
  PVOID OutputBuffer;
  PMDL OutputMdlAddress;
};

/* 434 */
union _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8
{
  struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$FA02ECF11A69AC1E6B191DC34CAEB912 VerifyVolume;
  struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$0B5EA8E8929008E258578A76B6BE23DC Common;
  struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$76050F9BF03608861C405655625E7834 Neither;
  struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$49E9EB252B572CB315A7FBEA0300B2A3 Buffered;
  struct _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8::$00C4EDCD47B29C4393BFBA5C35C451F3 Direct;
};

/* 441 */
struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$5A7FA612A1FFDACC98AEB9E084AACC14
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG IoControlCode;
};

/* 442 */
struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$3EE22F3D4AA41773DDE58241568FF7F8
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG IoControlCode;
  PVOID InputBuffer;
  PVOID OutputBuffer;
  PMDL OutputMdlAddress;
};

/* 443 */
struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$EE747383595C731D1BC9579545CE0C81
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG IoControlCode;
  PVOID SystemBuffer;
};

/* 444 */
struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$168B58890C79B159843BBEC23938AE1D
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG IoControlCode;
  PVOID InputSystemBuffer;
  PVOID OutputBuffer;
  PMDL OutputMdlAddress;
};

/* 445 */
struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$8C73DD85F2936471D3EB4047A5FFF3FF
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG IoControlCode;
  PVOID InputBuffer;
  PVOID OutputBuffer;
};

/* 440 */
union _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319
{
  struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$5A7FA612A1FFDACC98AEB9E084AACC14 Common;
  struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$3EE22F3D4AA41773DDE58241568FF7F8 Neither;
  struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$EE747383595C731D1BC9579545CE0C81 Buffered;
  struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$168B58890C79B159843BBEC23938AE1D Direct;
  struct _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319::$8C73DD85F2936471D3EB4047A5FFF3FF FastIo;
};

/* 114 */
typedef union _LARGE_INTEGER *PLARGE_INTEGER;

/* 130 */
typedef struct _KPROCESS *PEPROCESS;

/* 446 */
struct _FLT_PARAMETERS::$E1E955E56B4C053DD40911BAD30872D4
{
  PLARGE_INTEGER Length;
  __declspec(align(8)) ULONG Key;
  LARGE_INTEGER ByteOffset;
  PEPROCESS ProcessId;
  BOOLEAN FailImmediately;
  BOOLEAN ExclusiveLock;
};

/* 254 */
typedef DWORD SECURITY_INFORMATION;

/* 447 */
struct _FLT_PARAMETERS::$EF4BB2A3EA5E297DCEE7F4F15D3756C6
{
  SECURITY_INFORMATION SecurityInformation;
  __declspec(align(8)) ULONG Length;
  PVOID SecurityBuffer;
  PMDL MdlAddress;
};

/* 448 */
struct _FLT_PARAMETERS::$E1830675726AC350ADD284B511E01E52
{
  SECURITY_INFORMATION SecurityInformation;
  PSECURITY_DESCRIPTOR SecurityDescriptor;
};

/* 449 */
struct _FLT_PARAMETERS::$D24474CE3B68EBF89E5A61C71CBC75EE
{
  ULONG_PTR ProviderId;
  PVOID DataPath;
  ULONG BufferSize;
  PVOID Buffer;
};

/* 263 */
typedef PVOID PSID;

/* 264 */
typedef struct _FILE_GET_QUOTA_INFORMATION *PFILE_GET_QUOTA_INFORMATION;

/* 450 */
struct _FLT_PARAMETERS::$683C3EE208A9575EF36144430C7EF9B0
{
  ULONG Length;
  PSID StartSid;
  PFILE_GET_QUOTA_INFORMATION SidList;
  ULONG SidListLength;
  PVOID QuotaBuffer;
  PMDL MdlAddress;
};

/* 451 */
struct _FLT_PARAMETERS::$5B587018489257566E3078D7CD7246AA
{
  ULONG Length;
  PVOID QuotaBuffer;
  PMDL MdlAddress;
};

/* 341 */
typedef struct _CM_RESOURCE_LIST *PCM_RESOURCE_LIST;

/* 453 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$69C11E4E3904219D9A8207E8DBA8FECD
{
  PCM_RESOURCE_LIST AllocatedResources;
  PCM_RESOURCE_LIST AllocatedResourcesTranslated;
};

/* 273 */
enum _DEVICE_RELATION_TYPE
{
  BusRelations = 0x0,
  EjectionRelations = 0x1,
  PowerRelations = 0x2,
  RemovalRelations = 0x3,
  TargetDeviceRelation = 0x4,
  SingleBusRelations = 0x5,
  TransportRelations = 0x6,
};

/* 272 */
typedef enum _DEVICE_RELATION_TYPE DEVICE_RELATION_TYPE;

/* 454 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$670710264263D47AAED285B3D8DDF250
{
  DEVICE_RELATION_TYPE Type;
};

/* 275 */
typedef struct _INTERFACE *PINTERFACE;

/* 455 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$7995DA36ED0214F9D006DCD5B47162D4
{
  const GUID *InterfaceType;
  USHORT Size;
  USHORT Version;
  PINTERFACE Interface;
  PVOID InterfaceSpecificData;
};

/* 280 */
typedef struct _DEVICE_CAPABILITIES *PDEVICE_CAPABILITIES;

/* 456 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$6B11BC409C8BDB4C1D2CF8E6F83B383D
{
  PDEVICE_CAPABILITIES Capabilities;
};

/* 287 */
typedef struct _IO_RESOURCE_REQUIREMENTS_LIST *PIO_RESOURCE_REQUIREMENTS_LIST;

/* 457 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$E3C1BD80419791D70DF0170630DDCD15
{
  PIO_RESOURCE_REQUIREMENTS_LIST IoResourceRequirementList;
};

/* 458 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$A7E969D4AB37DFCCDF3B9267E9AA5B4E
{
  ULONG WhichSpace;
  PVOID Buffer;
  ULONG Offset;
  __declspec(align(8)) ULONG Length;
};

/* 459 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$CAFA629F92AFE900ACAC7E5B47418F4C
{
  BOOLEAN Lock;
};

/* 316 */
enum $2A8472B1E6C2A8931738C92032F03B5A
{
  BusQueryDeviceID = 0x0,
  BusQueryHardwareIDs = 0x1,
  BusQueryCompatibleIDs = 0x2,
  BusQueryInstanceID = 0x3,
  BusQueryDeviceSerialNumber = 0x4,
  BusQueryContainerID = 0x5,
};

/* 315 */
typedef enum $2A8472B1E6C2A8931738C92032F03B5A BUS_QUERY_ID_TYPE;

/* 460 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$03E399533941020534C84F7B69BA6C0D
{
  BUS_QUERY_ID_TYPE IdType;
};

/* 319 */
enum $CD1AEEBAB641DEC86F01C12702A854EA
{
  DeviceTextDescription = 0x0,
  DeviceTextLocationInformation = 0x1,
};

/* 318 */
typedef enum $CD1AEEBAB641DEC86F01C12702A854EA DEVICE_TEXT_TYPE;

/* 320 */
typedef DWORD LCID;

/* 461 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$B4A62011343B3DB9A4CF5A16B9E2E60D
{
  DEVICE_TEXT_TYPE DeviceTextType;
  __declspec(align(8)) LCID LocaleId;
};

/* 323 */
enum _DEVICE_USAGE_NOTIFICATION_TYPE
{
  DeviceUsageTypeUndefined = 0x0,
  DeviceUsageTypePaging = 0x1,
  DeviceUsageTypeHibernation = 0x2,
  DeviceUsageTypeDumpFile = 0x3,
  DeviceUsageTypeBoot = 0x4,
  DeviceUsageTypePostDisplay = 0x5,
};

/* 322 */
typedef enum _DEVICE_USAGE_NOTIFICATION_TYPE DEVICE_USAGE_NOTIFICATION_TYPE;

/* 462 */
struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$9262F46D7DDB73DE5D2FA4C200481D73
{
  BOOLEAN InPath;
  BOOLEAN Reserved[3];
  __declspec(align(8)) DEVICE_USAGE_NOTIFICATION_TYPE Type;
};

/* 452 */
union _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62
{
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$69C11E4E3904219D9A8207E8DBA8FECD StartDevice;
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$670710264263D47AAED285B3D8DDF250 QueryDeviceRelations;
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$7995DA36ED0214F9D006DCD5B47162D4 QueryInterface;
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$6B11BC409C8BDB4C1D2CF8E6F83B383D DeviceCapabilities;
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$E3C1BD80419791D70DF0170630DDCD15 FilterResourceRequirements;
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$A7E969D4AB37DFCCDF3B9267E9AA5B4E ReadWriteConfig;
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$CAFA629F92AFE900ACAC7E5B47418F4C SetLock;
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$03E399533941020534C84F7B69BA6C0D QueryId;
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$B4A62011343B3DB9A4CF5A16B9E2E60D QueryDeviceText;
  struct _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62::$9262F46D7DDB73DE5D2FA4C200481D73 UsageNotification;
};

/* 465 */
enum _FS_FILTER_SECTION_SYNC_TYPE
{
  SyncTypeOther = 0x0,
  SyncTypeCreateSection = 0x1,
};

/* 464 */
typedef enum _FS_FILTER_SECTION_SYNC_TYPE FS_FILTER_SECTION_SYNC_TYPE;

/* 466 */
typedef struct _FS_FILTER_SECTION_SYNC_OUTPUT *PFS_FILTER_SECTION_SYNC_OUTPUT;

/* 463 */
struct _FLT_PARAMETERS::$80C71161FF31F60BFA97811A2D08207E
{
  FS_FILTER_SECTION_SYNC_TYPE SyncType;
  ULONG PageProtection;
  PFS_FILTER_SECTION_SYNC_OUTPUT OutputInformation;
};

/* 469 */
typedef struct _ERESOURCE *PERESOURCE;

/* 468 */
struct _FLT_PARAMETERS::$1BF1138F8D2DDD2E6462FEFA2C4F94BC
{
  PLARGE_INTEGER EndingOffset;
  PERESOURCE *ResourceToRelease;
};

/* 470 */
struct _FLT_PARAMETERS::$236B69F1384B32B472ACEC4C285A943A
{
  PERESOURCE ResourceToRelease;
};

/* 368 */
typedef struct _IRP IRP;

/* 367 */
typedef IRP *PIRP;

/* 472 */
typedef ULONG *PULONG;

/* 471 */
struct _FLT_PARAMETERS::$23337A8327A47FE1F43FAA4C6C99C8FE
{
  PIRP Irp;
  PVOID FileInformation;
  PULONG Length;
  FILE_INFORMATION_CLASS FileInformationClass;
};

/* 473 */
struct _FLT_PARAMETERS::$DDCF7A69752DF3F72589827B6362C15B
{
  LARGE_INTEGER FileOffset;
  ULONG Length;
  __declspec(align(8)) ULONG LockKey;
  __declspec(align(8)) BOOLEAN CheckForReadOperation;
};

/* 371 */
typedef struct _FILE_NETWORK_OPEN_INFORMATION *PFILE_NETWORK_OPEN_INFORMATION;

/* 474 */
struct _FLT_PARAMETERS::$A8B5303DDD6CF49B21EB229EB6671508
{
  PIRP Irp;
  PFILE_NETWORK_OPEN_INFORMATION NetworkInformation;
};

/* 475 */
struct _FLT_PARAMETERS::$EBF2C9E717A477FC321554DEB0C6EB89
{
  LARGE_INTEGER FileOffset;
  __declspec(align(8)) ULONG Length;
  __declspec(align(8)) ULONG Key;
  PMDL *MdlChain;
};

/* 476 */
struct _FLT_PARAMETERS::$7CA8F3751773063710B131C149F5D66B
{
  PMDL MdlChain;
};

/* 477 */
struct _FLT_PARAMETERS::$F38300D51E9A4C5A1745047EEB093AA7
{
  LARGE_INTEGER FileOffset;
  PMDL MdlChain;
};

/* 478 */
struct _FLT_PARAMETERS::$3622164DF61772CECDB513BD2EB7BD64
{
  ULONG DeviceType;
};

/* 479 */
struct _FLT_PARAMETERS::$8B4F3F4C47B95A7D4CF340B7EF6275B0
{
  PVOID Argument1;
  PVOID Argument2;
  PVOID Argument3;
  PVOID Argument4;
  PVOID Argument5;
  LARGE_INTEGER Argument6;
};

/* 418 */
union _FLT_PARAMETERS
{
  struct _FLT_PARAMETERS::$2D0EF737506A31CF526E95DF6E6C385F Create;
  struct _FLT_PARAMETERS::$77BD7C9E05D513C0ECE9AEB1E74EF34D CreatePipe;
  struct _FLT_PARAMETERS::$77BD7C9E05D513C0ECE9AEB1E74EF34D CreateMailslot;
  struct _FLT_PARAMETERS::$4C1DDE0E7F75A0050C08EC15CDFA5486 Read;
  struct _FLT_PARAMETERS::$76ACCD59B9FA4006BFE8EAB4646DA7D5 Write;
  struct _FLT_PARAMETERS::$6362CED5365C795A362AD07A7B22D512 QueryFileInformation;
  struct _FLT_PARAMETERS::$983E91713E4B44CE00B355D2B1AA9C70 SetFileInformation;
  struct _FLT_PARAMETERS::$C160961485644FAA31DF20F0C3BCC9F6 QueryEa;
  struct _FLT_PARAMETERS::$AFAE931016418FD1718C58C39C98E785 SetEa;
  struct _FLT_PARAMETERS::$257C6F32E092536D9FEE04CC14ADB5D9 QueryVolumeInformation;
  struct _FLT_PARAMETERS::$257C6F32E092536D9FEE04CC14ADB5D9 SetVolumeInformation;
  union _FLT_PARAMETERS::$70383F8762D96C93832E3BF9BC8D7030 DirectoryControl;
  union _FLT_PARAMETERS::$FB0325D1C0E68F74564C576F6E476CA8 FileSystemControl;
  union _FLT_PARAMETERS::$730BCCFC5E6429FA8DED20B83E2C4319 DeviceIoControl;
  struct _FLT_PARAMETERS::$E1E955E56B4C053DD40911BAD30872D4 LockControl;
  struct _FLT_PARAMETERS::$EF4BB2A3EA5E297DCEE7F4F15D3756C6 QuerySecurity;
  struct _FLT_PARAMETERS::$E1830675726AC350ADD284B511E01E52 SetSecurity;
  struct _FLT_PARAMETERS::$D24474CE3B68EBF89E5A61C71CBC75EE WMI;
  struct _FLT_PARAMETERS::$683C3EE208A9575EF36144430C7EF9B0 QueryQuota;
  struct _FLT_PARAMETERS::$5B587018489257566E3078D7CD7246AA SetQuota;
  union _FLT_PARAMETERS::$86FCC8BD6F9A75EF0FFAA118D1E70E62 Pnp;
  struct _FLT_PARAMETERS::$80C71161FF31F60BFA97811A2D08207E AcquireForSectionSynchronization;
  struct _FLT_PARAMETERS::$1BF1138F8D2DDD2E6462FEFA2C4F94BC AcquireForModifiedPageWriter;
  struct _FLT_PARAMETERS::$236B69F1384B32B472ACEC4C285A943A ReleaseForModifiedPageWriter;
  struct _FLT_PARAMETERS::$23337A8327A47FE1F43FAA4C6C99C8FE QueryOpen;
  struct _FLT_PARAMETERS::$DDCF7A69752DF3F72589827B6362C15B FastIoCheckIfPossible;
  struct _FLT_PARAMETERS::$A8B5303DDD6CF49B21EB229EB6671508 NetworkQueryOpen;
  struct _FLT_PARAMETERS::$EBF2C9E717A477FC321554DEB0C6EB89 MdlRead;
  struct _FLT_PARAMETERS::$7CA8F3751773063710B131C149F5D66B MdlReadComplete;
  struct _FLT_PARAMETERS::$EBF2C9E717A477FC321554DEB0C6EB89 PrepareMdlWrite;
  struct _FLT_PARAMETERS::$F38300D51E9A4C5A1745047EEB093AA7 MdlWriteComplete;
  struct _FLT_PARAMETERS::$3622164DF61772CECDB513BD2EB7BD64 MountVolume;
  struct _FLT_PARAMETERS::$8B4F3F4C47B95A7D4CF340B7EF6275B0 Others;
};

/* 417 */
typedef union _FLT_PARAMETERS FLT_PARAMETERS;

/* 98 */
struct _FLT_IO_PARAMETER_BLOCK
{
  ULONG IrpFlags;
  UCHAR MajorFunction;
  UCHAR MinorFunction;
  UCHAR OperationFlags;
  UCHAR Reserved;
  PFILE_OBJECT TargetFileObject;
  PFLT_INSTANCE TargetInstance;
  FLT_PARAMETERS Parameters;
};

/* 482 */
struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$27183FC11B178907B5D2BB34AFACE7F1
{
  USHORT SubstituteNameOffset;
  USHORT SubstituteNameLength;
  USHORT PrintNameOffset;
  USHORT PrintNameLength;
  ULONG Flags;
  WCHAR PathBuffer[1];
};

/* 483 */
struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$538BBEAAFB526DA55D87E8D9C61BE453
{
  USHORT SubstituteNameOffset;
  USHORT SubstituteNameLength;
  USHORT PrintNameOffset;
  USHORT PrintNameLength;
  WCHAR PathBuffer[1];
};

/* 484 */
struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$E4726FB01B43180CB4D608E8FC40A3CF
{
  UCHAR DataBuffer[1];
};

/* 485 */
struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$7F2A391463C85579B142CF8A59256159
{
  GUID TagGuid;
  UCHAR DataBuffer[1];
};

/* 481 */
union _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0
{
  struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$27183FC11B178907B5D2BB34AFACE7F1 SymbolicLinkReparseBuffer;
  struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$538BBEAAFB526DA55D87E8D9C61BE453 MountPointReparseBuffer;
  struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$E4726FB01B43180CB4D608E8FC40A3CF GenericReparseBuffer;
  struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$7F2A391463C85579B142CF8A59256159 GenericGUIDReparseBuffer;
};

/* 480 */
struct _FLT_TAG_DATA_BUFFER
{
  ULONG FileTag;
  USHORT TagDataLength;
  USHORT UnparsedNameLength;
  union
  {
    struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$27183FC11B178907B5D2BB34AFACE7F1 SymbolicLinkReparseBuffer;
    struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$538BBEAAFB526DA55D87E8D9C61BE453 MountPointReparseBuffer;
    struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$E4726FB01B43180CB4D608E8FC40A3CF GenericReparseBuffer;
    struct _FLT_TAG_DATA_BUFFER::$DCEC59C943A34D005E5CC5FDD2A7B5E0::$7F2A391463C85579B142CF8A59256159 GenericGUIDReparseBuffer;
  };
};

/* 105 */
typedef struct _DRIVER_EXTENSION *PDRIVER_EXTENSION;

/* 110 */
typedef struct _FAST_IO_DISPATCH *PFAST_IO_DISPATCH;

/* 379 */
typedef NTSTATUS __stdcall DRIVER_INITIALIZE(struct _DRIVER_OBJECT *DriverObject, PUNICODE_STRING RegistryPath);

/* 378 */
typedef DRIVER_INITIALIZE *PDRIVER_INITIALIZE;

/* 381 */
typedef void __stdcall DRIVER_STARTIO(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp);

/* 380 */
typedef DRIVER_STARTIO *PDRIVER_STARTIO;

/* 383 */
typedef void __stdcall DRIVER_UNLOAD(struct _DRIVER_OBJECT *DriverObject);

/* 382 */
typedef DRIVER_UNLOAD *PDRIVER_UNLOAD;

/* 385 */
typedef NTSTATUS __stdcall DRIVER_DISPATCH(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp);

/* 384 */
typedef DRIVER_DISPATCH *PDRIVER_DISPATCH;

/* 104 */
struct _DRIVER_OBJECT
{
  CSHORT Type;
  CSHORT Size;
  PDEVICE_OBJECT DeviceObject;
  ULONG Flags;
  PVOID DriverStart;
  ULONG DriverSize;
  PVOID DriverSection;
  PDRIVER_EXTENSION DriverExtension;
  UNICODE_STRING DriverName;
  PUNICODE_STRING HardwareDatabase;
  PFAST_IO_DISPATCH FastIoDispatch;
  PDRIVER_INITIALIZE DriverInit;
  PDRIVER_STARTIO DriverStartIo;
  PDRIVER_UNLOAD DriverUnload;
  PDRIVER_DISPATCH MajorFunction[28];
};

/* 183 */
union _IRP::$CBBBB9F4F0755A16DC8A369061485BEC
{
  struct _IRP *MasterIrp;
  LONG IrpCount;
  PVOID SystemBuffer;
};

/* 187 */
typedef UCHAR KIRQL;

/* 115 */
typedef struct _IO_STATUS_BLOCK *PIO_STATUS_BLOCK;

/* 188 */
typedef struct _KEVENT *PKEVENT;

/* 192 */
typedef void (__stdcall *PIO_APC_ROUTINE)(PVOID ApcContext, PIO_STATUS_BLOCK IoStatusBlock, ULONG Reserved);

/* 191 */
union _IRP::$::$1DDC8106121C6C57578C3B7B583E783E::$72AAA2734763A5172362D9A41AF08CB4
{
  PIO_APC_ROUTINE UserApcRoutine;
  PVOID IssuingProcess;
};

/* 190 */
struct _IRP::$6B96A96ED958C92F2CB4B83EAB343043::$1DDC8106121C6C57578C3B7B583E783E
{
  union
  {
    PIO_APC_ROUTINE UserApcRoutine;
    PVOID IssuingProcess;
  };
  PVOID UserApcContext;
};

/* 189 */
union _IRP::$6B96A96ED958C92F2CB4B83EAB343043
{
  struct _IRP::$6B96A96ED958C92F2CB4B83EAB343043::$1DDC8106121C6C57578C3B7B583E783E AsynchronousParameters;
  LARGE_INTEGER AllocationSize;
};

/* 194 */
typedef void __stdcall DRIVER_CANCEL(struct _DEVICE_OBJECT *DeviceObject, struct _IRP *Irp);

/* 193 */
typedef DRIVER_CANCEL *PDRIVER_CANCEL;

/* 200 */
struct _IRP::$::$::$63BBF9CAFCFD23268916A053C4643290::$D67882FDDE0993B795A398485751D997
{
  PVOID DriverContext[4];
};

/* 197 */
union _IRP::$::$2AD798E65616C4F7304824DBFA27E419::$63BBF9CAFCFD23268916A053C4643290
{
  KDEVICE_QUEUE_ENTRY DeviceQueueEntry;
  struct
  {
    PVOID DriverContext[4];
  };
};

/* 202 */
union _IRP::$::$::$665C8370128C04AB892B069E6FB086E8::$8B5CD6CDFBAAB114E6B0B83ED2C2A4E9
{
  struct _IO_STACK_LOCATION *CurrentStackLocation;
  ULONG PacketType;
};

/* 201 */
struct _IRP::$::$2AD798E65616C4F7304824DBFA27E419::$665C8370128C04AB892B069E6FB086E8
{
  LIST_ENTRY ListEntry;
  union
  {
    struct _IO_STACK_LOCATION *CurrentStackLocation;
    ULONG PacketType;
  };
};

/* 196 */
struct _IRP::$66699B8BF83DC91F51A70E4C6E3F33A6::$2AD798E65616C4F7304824DBFA27E419
{
  union
  {
    KDEVICE_QUEUE_ENTRY DeviceQueueEntry;
    struct
    {
      PVOID DriverContext[4];
    };
  };
  PETHREAD Thread;
  PCHAR AuxiliaryBuffer;
  struct
  {
    LIST_ENTRY ListEntry;
    union
    {
      struct _IO_STACK_LOCATION *CurrentStackLocation;
      ULONG PacketType;
    };
  };
  PFILE_OBJECT OriginalFileObject;
};

/* 370 */
struct _KAPC
{
  UCHAR Type;
  UCHAR SpareByte0;
  UCHAR Size;
  UCHAR SpareByte1;
  ULONG SpareLong0;
  struct _KTHREAD *Thread;
  LIST_ENTRY ApcListEntry;
  PVOID Reserved[3];
  PVOID NormalContext;
  PVOID SystemArgument1;
  PVOID SystemArgument2;
  CCHAR ApcStateIndex;
  KPROCESSOR_MODE ApcMode;
  BOOLEAN Inserted;
};

/* 369 */
typedef struct _KAPC KAPC;

/* 195 */
union _IRP::$66699B8BF83DC91F51A70E4C6E3F33A6
{
  struct _IRP::$66699B8BF83DC91F51A70E4C6E3F33A6::$2AD798E65616C4F7304824DBFA27E419 Overlay;
  KAPC Apc;
  PVOID CompletionKey;
};

/* 182 */
struct __declspec(align(16)) _IRP
{
  CSHORT Type;
  USHORT Size;
  PMDL MdlAddress;
  ULONG Flags;
  union _IRP::$CBBBB9F4F0755A16DC8A369061485BEC AssociatedIrp;
  LIST_ENTRY ThreadListEntry;
  IO_STATUS_BLOCK IoStatus;
  KPROCESSOR_MODE RequestorMode;
  BOOLEAN PendingReturned;
  CHAR StackCount;
  CHAR CurrentLocation;
  BOOLEAN Cancel;
  KIRQL CancelIrql;
  CCHAR ApcEnvironment;
  UCHAR AllocationFlags;
  PIO_STATUS_BLOCK UserIosb;
  PKEVENT UserEvent;
  union _IRP::$6B96A96ED958C92F2CB4B83EAB343043 Overlay;
  PDRIVER_CANCEL CancelRoutine;
  PVOID UserBuffer;
  union _IRP::$66699B8BF83DC91F51A70E4C6E3F33A6 Tail;
};

/* 409 */
struct _DEVOBJ_EXTENSION
{
  CSHORT Type;
  USHORT Size;
  PDEVICE_OBJECT DeviceObject;
  ULONG PowerFlags;
  struct _DEVICE_OBJECT_POWER_EXTENSION *Dope;
  ULONG ExtensionFlags;
  PVOID DeviceNode;
  PDEVICE_OBJECT AttachedTo;
  LONG StartIoCount;
  LONG StartIoKey;
  ULONG StartIoFlags;
  PVPB Vpb;
  PVOID DependencyNode;
  PVOID InterruptContext;
  PVOID VerifierContext;
};

/* 208 */
typedef struct _SECURITY_QUALITY_OF_SERVICE *PSECURITY_QUALITY_OF_SERVICE;

/* 213 */
typedef struct _ACCESS_STATE *PACCESS_STATE;

/* 217 */
typedef DWORD ACCESS_MASK;

/* 207 */
struct _IO_SECURITY_CONTEXT
{
  PSECURITY_QUALITY_OF_SERVICE SecurityQos;
  PACCESS_STATE AccessState;
  ACCESS_MASK DesiredAccess;
  ULONG FullCreateOptions;
};

/* 164 */
struct _MDL
{
  struct _MDL *Next;
  CSHORT Size;
  CSHORT MdlFlags;
  struct _EPROCESS *Process;
  PVOID MappedSystemVa;
  PVOID StartVa;
  ULONG ByteCount;
  ULONG ByteOffset;
};

/* 268 */
typedef unsigned __int8 BYTE;

/* 270 */
struct _SID_IDENTIFIER_AUTHORITY
{
  BYTE Value[6];
};

/* 269 */
typedef struct _SID_IDENTIFIER_AUTHORITY SID_IDENTIFIER_AUTHORITY;

/* 267 */
struct _SID
{
  BYTE Revision;
  BYTE SubAuthorityCount;
  SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  DWORD SubAuthority[1];
};

/* 266 */
typedef struct _SID SID;

/* 265 */
struct _FILE_GET_QUOTA_INFORMATION
{
  ULONG NextEntryOffset;
  ULONG SidLength;
  SID Sid;
};

/* 290 */
enum _INTERFACE_TYPE
{
  InterfaceTypeUndefined = 0xFFFFFFFF,
  Internal = 0x0,
  Isa = 0x1,
  Eisa = 0x2,
  MicroChannel = 0x3,
  TurboChannel = 0x4,
  PCIBus = 0x5,
  VMEBus = 0x6,
  NuBus = 0x7,
  PCMCIABus = 0x8,
  CBus = 0x9,
  MPIBus = 0xA,
  MPSABus = 0xB,
  ProcessorInternal = 0xC,
  InternalPowerBus = 0xD,
  PNPISABus = 0xE,
  PNPBus = 0xF,
  MaximumInterfaceType = 0x10,
};

/* 289 */
typedef enum _INTERFACE_TYPE INTERFACE_TYPE;

/* 297 */
typedef LARGE_INTEGER PHYSICAL_ADDRESS;

/* 350 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BBBCA153A119060DF311607C16E36BB2
{
  PHYSICAL_ADDRESS Start;
  ULONG Length;
};
#pragma pack(pop)

/* 351 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BB7094CF39B58C60385FAAA7DFEE1197
{
  ULONG Level;
  ULONG Vector;
  KAFFINITY Affinity;
};
#pragma pack(pop)

/* 354 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$D155ACCA6E988C466DB4311FB52073D0
{
  USHORT Reserved;
  USHORT MessageCount;
  ULONG Vector;
  KAFFINITY Affinity;
};
#pragma pack(pop)

/* 355 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$BB7094CF39B58C60385FAAA7DFEE1197
{
  ULONG Level;
  ULONG Vector;
  KAFFINITY Affinity;
};
#pragma pack(pop)

/* 353 */
#pragma pack(push, 1)
union _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$4320D89A9BBD0A464899BC45363B6444::$DE3CCB929DB832FEAC38EBA7195AFD95
{
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$D155ACCA6E988C466DB4311FB52073D0 Raw;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$BB7094CF39B58C60385FAAA7DFEE1197 Translated;
};
#pragma pack(pop)

/* 352 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$4320D89A9BBD0A464899BC45363B6444
{
  #pragma pack(push, 1)
  union
  {
    struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$D155ACCA6E988C466DB4311FB52073D0 Raw;
    struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$::$::$DE3CCB929DB832FEAC38EBA7195AFD95::$BB7094CF39B58C60385FAAA7DFEE1197 Translated;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 356 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$1F3D6AF14FC8FA95287DDF447D6BE47F
{
  ULONG Channel;
  ULONG Port;
  ULONG Reserved1;
};
#pragma pack(pop)

/* 357 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$812F79A5FC2BE6FE62CE9F41854F4845
{
  ULONG Data[3];
};
#pragma pack(pop)

/* 358 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$D2EE30319AFD96435F4334D8E12C7935
{
  ULONG Start;
  ULONG Length;
  ULONG Reserved;
};
#pragma pack(pop)

/* 359 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$6BF00F84A5C727E3B25245E9FBDFB278
{
  ULONG DataSize;
  ULONG Reserved1;
  ULONG Reserved2;
};
#pragma pack(pop)

/* 360 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$EB36DC85652755C8EC8C69A205B736DB
{
  PHYSICAL_ADDRESS Start;
  ULONG Length40;
};
#pragma pack(pop)

/* 361 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$08205AB7C2167E8C9C2BF0274334A928
{
  PHYSICAL_ADDRESS Start;
  ULONG Length48;
};
#pragma pack(pop)

/* 362 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$05881B79B3CAFBFC2EAF6FE4C8FAB51F
{
  PHYSICAL_ADDRESS Start;
  ULONG Length64;
};
#pragma pack(pop)

/* 349 */
#pragma pack(push, 1)
union _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F
{
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BBBCA153A119060DF311607C16E36BB2 Generic;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BBBCA153A119060DF311607C16E36BB2 Port;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BB7094CF39B58C60385FAAA7DFEE1197 Interrupt;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$4320D89A9BBD0A464899BC45363B6444 MessageInterrupt;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$BBBCA153A119060DF311607C16E36BB2 Memory;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$1F3D6AF14FC8FA95287DDF447D6BE47F Dma;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$812F79A5FC2BE6FE62CE9F41854F4845 DevicePrivate;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$D2EE30319AFD96435F4334D8E12C7935 BusNumber;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$6BF00F84A5C727E3B25245E9FBDFB278 DeviceSpecificData;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$EB36DC85652755C8EC8C69A205B736DB Memory40;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$08205AB7C2167E8C9C2BF0274334A928 Memory48;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F::$05881B79B3CAFBFC2EAF6FE4C8FAB51F Memory64;
};
#pragma pack(pop)

/* 348 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  UCHAR Type;
  UCHAR ShareDisposition;
  USHORT Flags;
  union _CM_PARTIAL_RESOURCE_DESCRIPTOR::$ADB721E5076B7192632491DCDDDBEB4F u;
};
#pragma pack(pop)

/* 347 */
typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR CM_PARTIAL_RESOURCE_DESCRIPTOR;

/* 346 */
#pragma pack(push, 1)
struct _CM_PARTIAL_RESOURCE_LIST
{
  USHORT Version;
  USHORT Revision;
  ULONG Count;
  CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
};
#pragma pack(pop)

/* 345 */
typedef struct _CM_PARTIAL_RESOURCE_LIST CM_PARTIAL_RESOURCE_LIST;

/* 344 */
#pragma pack(push, 1)
struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  INTERFACE_TYPE InterfaceType;
  ULONG BusNumber;
  CM_PARTIAL_RESOURCE_LIST PartialResourceList;
};
#pragma pack(pop)

/* 343 */
typedef struct _CM_FULL_RESOURCE_DESCRIPTOR CM_FULL_RESOURCE_DESCRIPTOR;

/* 342 */
#pragma pack(push, 1)
struct _CM_RESOURCE_LIST
{
  ULONG Count;
  CM_FULL_RESOURCE_DESCRIPTOR List[1];
};
#pragma pack(pop)

/* 277 */
typedef void (__stdcall *PINTERFACE_REFERENCE)(PVOID Context);

/* 278 */
typedef void (__stdcall *PINTERFACE_DEREFERENCE)(PVOID Context);

/* 276 */
struct _INTERFACE
{
  USHORT Size;
  USHORT Version;
  PVOID Context;
  PINTERFACE_REFERENCE InterfaceReference;
  PINTERFACE_DEREFERENCE InterfaceDereference;
};

/* 283 */
enum _DEVICE_POWER_STATE
{
  PowerDeviceUnspecified = 0x0,
  PowerDeviceD0 = 0x1,
  PowerDeviceD1 = 0x2,
  PowerDeviceD2 = 0x3,
  PowerDeviceD3 = 0x4,
  PowerDeviceMaximum = 0x5,
};

/* 282 */
typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;

/* 285 */
enum _SYSTEM_POWER_STATE
{
  PowerSystemUnspecified = 0x0,
  PowerSystemWorking = 0x1,
  PowerSystemSleeping1 = 0x2,
  PowerSystemSleeping2 = 0x3,
  PowerSystemSleeping3 = 0x4,
  PowerSystemHibernate = 0x5,
  PowerSystemShutdown = 0x6,
  PowerSystemMaximum = 0x7,
};

/* 284 */
typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;

/* 281 */
struct _DEVICE_CAPABILITIES
{
  USHORT Size;
  USHORT Version;
  unsigned __int32 DeviceD1 : 1;
  unsigned __int32 DeviceD2 : 1;
  unsigned __int32 LockSupported : 1;
  unsigned __int32 EjectSupported : 1;
  unsigned __int32 Removable : 1;
  unsigned __int32 DockDevice : 1;
  unsigned __int32 UniqueID : 1;
  unsigned __int32 SilentInstall : 1;
  unsigned __int32 RawDeviceOK : 1;
  unsigned __int32 SurpriseRemovalOK : 1;
  unsigned __int32 WakeFromD0 : 1;
  unsigned __int32 WakeFromD1 : 1;
  unsigned __int32 WakeFromD2 : 1;
  unsigned __int32 WakeFromD3 : 1;
  unsigned __int32 HardwareDisabled : 1;
  unsigned __int32 NonDynamic : 1;
  unsigned __int32 WarmEjectSupported : 1;
  unsigned __int32 NoDisplayInUI : 1;
  unsigned __int32 Reserved1 : 1;
  unsigned __int32 WakeFromInterrupt : 1;
  unsigned __int32 SecureDevice : 1;
  unsigned __int32 ChildOfVgaEnabledBridge : 1;
  unsigned __int32 DecodeIoOnBoot : 1;
  unsigned __int32 Reserved : 9;
  ULONG Address;
  ULONG UINumber;
  DEVICE_POWER_STATE DeviceState[7];
  SYSTEM_POWER_STATE SystemWake;
  DEVICE_POWER_STATE DeviceWake;
  ULONG D1Latency;
  ULONG D2Latency;
  ULONG D3Latency;
};

/* 296 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$6F2DCCC140478981F4C84F12EF58F0E8
{
  ULONG Length;
  ULONG Alignment;
  PHYSICAL_ADDRESS MinimumAddress;
  PHYSICAL_ADDRESS MaximumAddress;
};

/* 300 */
enum _IRQ_DEVICE_POLICY
{
  IrqPolicyMachineDefault = 0x0,
  IrqPolicyAllCloseProcessors = 0x1,
  IrqPolicyOneCloseProcessor = 0x2,
  IrqPolicyAllProcessorsInMachine = 0x3,
  IrqPolicySpecifiedProcessors = 0x4,
  IrqPolicySpreadMessagesAcrossAllProcessors = 0x5,
  IrqPolicyAllProcessorsInMachineWhenSteered = 0x6,
};

/* 299 */
typedef enum _IRQ_DEVICE_POLICY IRQ_DEVICE_POLICY;

/* 302 */
enum _IRQ_PRIORITY
{
  IrqPriorityUndefined = 0x0,
  IrqPriorityLow = 0x1,
  IrqPriorityNormal = 0x2,
  IrqPriorityHigh = 0x3,
};

/* 301 */
typedef enum _IRQ_PRIORITY IRQ_PRIORITY;

/* 298 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$A5682085F38B4530410BC09C233C00C6
{
  ULONG MinimumVector;
  ULONG MaximumVector;
  IRQ_DEVICE_POLICY AffinityPolicy;
  IRQ_PRIORITY PriorityPolicy;
  KAFFINITY TargetedProcessors;
};

/* 303 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$17B187B8C3CC0C2C04D148A62457C1B5
{
  ULONG MinimumChannel;
  ULONG MaximumChannel;
};

/* 304 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$711A32C7DEC837C87D3D622B5D6CA547
{
  ULONG RequestLine;
  ULONG Reserved;
  ULONG Channel;
  ULONG TransferWidth;
};

/* 305 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$812F79A5FC2BE6FE62CE9F41854F4845
{
  ULONG Data[3];
};

/* 306 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$CFEA0CDFCF8B31E537C8D44F49AF209A
{
  ULONG Length;
  ULONG MinBusNumber;
  ULONG MaxBusNumber;
  ULONG Reserved;
};

/* 307 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$F28011FF41998B198A306197E74BFABD
{
  ULONG Priority;
  ULONG Reserved1;
  ULONG Reserved2;
};

/* 308 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$90A8EEE83C9F91E29DD5F8EE42946559
{
  ULONG Length40;
  ULONG Alignment40;
  PHYSICAL_ADDRESS MinimumAddress;
  PHYSICAL_ADDRESS MaximumAddress;
};

/* 309 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$9B5808D9D572DC66358F5E90A8A74F4F
{
  ULONG Length48;
  ULONG Alignment48;
  PHYSICAL_ADDRESS MinimumAddress;
  PHYSICAL_ADDRESS MaximumAddress;
};

/* 310 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$DA030873C766E4C7B95104F99E17565C
{
  ULONG Length64;
  ULONG Alignment64;
  PHYSICAL_ADDRESS MinimumAddress;
  PHYSICAL_ADDRESS MaximumAddress;
};

/* 311 */
struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$ACFC0B8B00258A4187B421B4FDF1B18A
{
  UCHAR Class;
  UCHAR Type;
  UCHAR Reserved1;
  UCHAR Reserved2;
  ULONG IdLowPart;
  ULONG IdHighPart;
};

/* 295 */
union _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02
{
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$6F2DCCC140478981F4C84F12EF58F0E8 Port;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$6F2DCCC140478981F4C84F12EF58F0E8 Memory;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$A5682085F38B4530410BC09C233C00C6 Interrupt;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$17B187B8C3CC0C2C04D148A62457C1B5 Dma;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$711A32C7DEC837C87D3D622B5D6CA547 DmaV3;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$6F2DCCC140478981F4C84F12EF58F0E8 Generic;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$812F79A5FC2BE6FE62CE9F41854F4845 DevicePrivate;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$CFEA0CDFCF8B31E537C8D44F49AF209A BusNumber;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$F28011FF41998B198A306197E74BFABD ConfigData;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$90A8EEE83C9F91E29DD5F8EE42946559 Memory40;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$9B5808D9D572DC66358F5E90A8A74F4F Memory48;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$DA030873C766E4C7B95104F99E17565C Memory64;
  struct _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02::$ACFC0B8B00258A4187B421B4FDF1B18A Connection;
};

/* 294 */
struct _IO_RESOURCE_DESCRIPTOR
{
  UCHAR Option;
  UCHAR Type;
  UCHAR ShareDisposition;
  UCHAR Spare1;
  USHORT Flags;
  USHORT Spare2;
  union _IO_RESOURCE_DESCRIPTOR::$E0BCE46F03EEBF143E8289580A8E6C02 u;
};

/* 293 */
typedef struct _IO_RESOURCE_DESCRIPTOR IO_RESOURCE_DESCRIPTOR;

/* 292 */
struct _IO_RESOURCE_LIST
{
  USHORT Version;
  USHORT Revision;
  ULONG Count;
  IO_RESOURCE_DESCRIPTOR Descriptors[1];
};

/* 291 */
typedef struct _IO_RESOURCE_LIST IO_RESOURCE_LIST;

/* 288 */
struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  ULONG ListSize;
  INTERFACE_TYPE InterfaceType;
  ULONG BusNumber;
  ULONG SlotNumber;
  ULONG Reserved[3];
  ULONG AlternativeLists;
  IO_RESOURCE_LIST List[1];
};

/* 467 */
struct _FS_FILTER_SECTION_SYNC_OUTPUT
{
  ULONG StructureSize;
  ULONG SizeReturned;
  ULONG Flags;
  ULONG DesiredReadAlignment;
};

/* 150 */
typedef struct _OWNER_ENTRY *POWNER_ENTRY;

/* 155 */
typedef __int16 SHORT;

/* 157 */
struct _ERESOURCE::$0F9CA66D6BD1B66FB152E2AC5421C126::$70F280A3DEE89B0F258B5EC8A3BE63AA
{
  UCHAR ReservedLowFlags;
  UCHAR WaiterPriority;
};

/* 156 */
union _ERESOURCE::$0F9CA66D6BD1B66FB152E2AC5421C126
{
  USHORT Flag;
  struct
  {
    UCHAR ReservedLowFlags;
    UCHAR WaiterPriority;
  };
};

/* 152 */
typedef ULONG_PTR ERESOURCE_THREAD;

/* 154 */
struct _OWNER_ENTRY::$818A6BB8E639852A52D20A2B257A1D60::$E71B718CD8428E7C8AA4A0868051E710
{
  unsigned __int32 IoPriorityBoosted : 1;
  unsigned __int32 OwnerReferenced : 1;
  unsigned __int32 IoQoSPriorityBoosted : 1;
  unsigned __int32 OwnerCount : 29;
};

/* 153 */
union _OWNER_ENTRY::$818A6BB8E639852A52D20A2B257A1D60
{
  struct
  {
    unsigned __int32 IoPriorityBoosted : 1;
    unsigned __int32 OwnerReferenced : 1;
    unsigned __int32 IoQoSPriorityBoosted : 1;
    unsigned __int32 OwnerCount : 29;
  };
  ULONG TableSize;
};

/* 151 */
struct _OWNER_ENTRY
{
  ERESOURCE_THREAD OwnerThread;
  union
  {
    struct
    {
      unsigned __int32 IoPriorityBoosted : 1;
      unsigned __int32 OwnerReferenced : 1;
      unsigned __int32 IoQoSPriorityBoosted : 1;
      unsigned __int32 OwnerCount : 29;
    };
    ULONG TableSize;
  };
};

/* 158 */
typedef struct _OWNER_ENTRY OWNER_ENTRY;

/* 159 */
union _ERESOURCE::$6485B31835FF66149107F3D6F17C6B98
{
  PVOID Address;
  ULONG_PTR CreatorBackTraceIndex;
};

/* 149 */
struct _ERESOURCE
{
  LIST_ENTRY SystemResourcesList;
  POWNER_ENTRY OwnerTable;
  SHORT ActiveCount;
  union
  {
    USHORT Flag;
    struct
    {
      UCHAR ReservedLowFlags;
      UCHAR WaiterPriority;
    };
  };
  PVOID SharedWaiters;
  PVOID ExclusiveWaiters;
  OWNER_ENTRY OwnerEntry;
  ULONG ActiveEntries;
  ULONG ContentionCount;
  ULONG NumberOfSharedWaiters;
  ULONG NumberOfExclusiveWaiters;
  PVOID Reserved2;
  union
  {
    PVOID Address;
    ULONG_PTR CreatorBackTraceIndex;
  };
  KSPIN_LOCK SpinLock;
};

/* 108 */
typedef NTSTATUS __stdcall DRIVER_ADD_DEVICE(struct _DRIVER_OBJECT *DriverObject, struct _DEVICE_OBJECT *PhysicalDeviceObject);

/* 107 */
typedef DRIVER_ADD_DEVICE *PDRIVER_ADD_DEVICE;

/* 106 */
struct _DRIVER_EXTENSION
{
  struct _DRIVER_OBJECT *DriverObject;
  PDRIVER_ADD_DEVICE AddDevice;
  ULONG Count;
  UNICODE_STRING ServiceKeyName;
};

/* 113 */
typedef BOOLEAN __stdcall FAST_IO_CHECK_IF_POSSIBLE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, BOOLEAN CheckForReadOperation, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 112 */
typedef FAST_IO_CHECK_IF_POSSIBLE *PFAST_IO_CHECK_IF_POSSIBLE;

/* 117 */
typedef BOOLEAN __stdcall FAST_IO_READ(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, PVOID Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 116 */
typedef FAST_IO_READ *PFAST_IO_READ;

/* 119 */
typedef BOOLEAN __stdcall FAST_IO_WRITE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, BOOLEAN Wait, ULONG LockKey, PVOID Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 118 */
typedef FAST_IO_WRITE *PFAST_IO_WRITE;

/* 122 */
typedef struct _FILE_BASIC_INFORMATION *PFILE_BASIC_INFORMATION;

/* 121 */
typedef BOOLEAN __stdcall FAST_IO_QUERY_BASIC_INFO(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, PFILE_BASIC_INFORMATION Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 120 */
typedef FAST_IO_QUERY_BASIC_INFO *PFAST_IO_QUERY_BASIC_INFO;

/* 126 */
typedef struct _FILE_STANDARD_INFORMATION *PFILE_STANDARD_INFORMATION;

/* 125 */
typedef BOOLEAN __stdcall FAST_IO_QUERY_STANDARD_INFO(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, PFILE_STANDARD_INFORMATION Buffer, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 124 */
typedef FAST_IO_QUERY_STANDARD_INFO *PFAST_IO_QUERY_STANDARD_INFO;

/* 129 */
typedef BOOLEAN __stdcall FAST_IO_LOCK(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PLARGE_INTEGER Length, PEPROCESS ProcessId, ULONG Key, BOOLEAN FailImmediately, BOOLEAN ExclusiveLock, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 128 */
typedef FAST_IO_LOCK *PFAST_IO_LOCK;

/* 132 */
typedef BOOLEAN __stdcall FAST_IO_UNLOCK_SINGLE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PLARGE_INTEGER Length, PEPROCESS ProcessId, ULONG Key, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 131 */
typedef FAST_IO_UNLOCK_SINGLE *PFAST_IO_UNLOCK_SINGLE;

/* 134 */
typedef BOOLEAN __stdcall FAST_IO_UNLOCK_ALL(struct _FILE_OBJECT *FileObject, PEPROCESS ProcessId, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 133 */
typedef FAST_IO_UNLOCK_ALL *PFAST_IO_UNLOCK_ALL;

/* 136 */
typedef BOOLEAN __stdcall FAST_IO_UNLOCK_ALL_BY_KEY(struct _FILE_OBJECT *FileObject, PVOID ProcessId, ULONG Key, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 135 */
typedef FAST_IO_UNLOCK_ALL_BY_KEY *PFAST_IO_UNLOCK_ALL_BY_KEY;

/* 138 */
typedef BOOLEAN __stdcall FAST_IO_DEVICE_CONTROL(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, PVOID InputBuffer, ULONG InputBufferLength, PVOID OutputBuffer, ULONG OutputBufferLength, ULONG IoControlCode, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 137 */
typedef FAST_IO_DEVICE_CONTROL *PFAST_IO_DEVICE_CONTROL;

/* 140 */
typedef void __stdcall FAST_IO_ACQUIRE_FILE(struct _FILE_OBJECT *FileObject);

/* 139 */
typedef FAST_IO_ACQUIRE_FILE *PFAST_IO_ACQUIRE_FILE;

/* 142 */
typedef void __stdcall FAST_IO_RELEASE_FILE(struct _FILE_OBJECT *FileObject);

/* 141 */
typedef FAST_IO_RELEASE_FILE *PFAST_IO_RELEASE_FILE;

/* 144 */
typedef void __stdcall FAST_IO_DETACH_DEVICE(struct _DEVICE_OBJECT *SourceDevice, struct _DEVICE_OBJECT *TargetDevice);

/* 143 */
typedef FAST_IO_DETACH_DEVICE *PFAST_IO_DETACH_DEVICE;

/* 146 */
typedef BOOLEAN __stdcall FAST_IO_QUERY_NETWORK_OPEN_INFO(struct _FILE_OBJECT *FileObject, BOOLEAN Wait, struct _FILE_NETWORK_OPEN_INFORMATION *Buffer, struct _IO_STATUS_BLOCK *IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 145 */
typedef FAST_IO_QUERY_NETWORK_OPEN_INFO *PFAST_IO_QUERY_NETWORK_OPEN_INFO;

/* 148 */
typedef NTSTATUS __stdcall FAST_IO_ACQUIRE_FOR_MOD_WRITE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER EndingOffset, struct _ERESOURCE **ResourceToRelease, struct _DEVICE_OBJECT *DeviceObject);

/* 147 */
typedef FAST_IO_ACQUIRE_FOR_MOD_WRITE *PFAST_IO_ACQUIRE_FOR_MOD_WRITE;

/* 162 */
typedef BOOLEAN __stdcall FAST_IO_MDL_READ(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 161 */
typedef FAST_IO_MDL_READ *PFAST_IO_MDL_READ;

/* 166 */
typedef BOOLEAN __stdcall FAST_IO_MDL_READ_COMPLETE(struct _FILE_OBJECT *FileObject, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);

/* 165 */
typedef FAST_IO_MDL_READ_COMPLETE *PFAST_IO_MDL_READ_COMPLETE;

/* 168 */
typedef BOOLEAN __stdcall FAST_IO_PREPARE_MDL_WRITE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _DEVICE_OBJECT *DeviceObject);

/* 167 */
typedef FAST_IO_PREPARE_MDL_WRITE *PFAST_IO_PREPARE_MDL_WRITE;

/* 170 */
typedef BOOLEAN __stdcall FAST_IO_MDL_WRITE_COMPLETE(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);

/* 169 */
typedef FAST_IO_MDL_WRITE_COMPLETE *PFAST_IO_MDL_WRITE_COMPLETE;

/* 172 */
typedef BOOLEAN __stdcall FAST_IO_READ_COMPRESSED(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PVOID Buffer, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _COMPRESSED_DATA_INFO *CompressedDataInfo, ULONG CompressedDataInfoLength, struct _DEVICE_OBJECT *DeviceObject);

/* 171 */
typedef FAST_IO_READ_COMPRESSED *PFAST_IO_READ_COMPRESSED;

/* 175 */
typedef BOOLEAN __stdcall FAST_IO_WRITE_COMPRESSED(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, ULONG Length, ULONG LockKey, PVOID Buffer, PMDL *MdlChain, PIO_STATUS_BLOCK IoStatus, struct _COMPRESSED_DATA_INFO *CompressedDataInfo, ULONG CompressedDataInfoLength, struct _DEVICE_OBJECT *DeviceObject);

/* 174 */
typedef FAST_IO_WRITE_COMPRESSED *PFAST_IO_WRITE_COMPRESSED;

/* 177 */
typedef BOOLEAN __stdcall FAST_IO_MDL_READ_COMPLETE_COMPRESSED(struct _FILE_OBJECT *FileObject, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);

/* 176 */
typedef FAST_IO_MDL_READ_COMPLETE_COMPRESSED *PFAST_IO_MDL_READ_COMPLETE_COMPRESSED;

/* 179 */
typedef BOOLEAN __stdcall FAST_IO_MDL_WRITE_COMPLETE_COMPRESSED(struct _FILE_OBJECT *FileObject, PLARGE_INTEGER FileOffset, PMDL MdlChain, struct _DEVICE_OBJECT *DeviceObject);

/* 178 */
typedef FAST_IO_MDL_WRITE_COMPLETE_COMPRESSED *PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED;

/* 181 */
typedef BOOLEAN __stdcall FAST_IO_QUERY_OPEN(struct _IRP *Irp, PFILE_NETWORK_OPEN_INFORMATION NetworkInformation, struct _DEVICE_OBJECT *DeviceObject);

/* 180 */
typedef FAST_IO_QUERY_OPEN *PFAST_IO_QUERY_OPEN;

/* 373 */
typedef NTSTATUS __stdcall FAST_IO_RELEASE_FOR_MOD_WRITE(struct _FILE_OBJECT *FileObject, struct _ERESOURCE *ResourceToRelease, struct _DEVICE_OBJECT *DeviceObject);

/* 372 */
typedef FAST_IO_RELEASE_FOR_MOD_WRITE *PFAST_IO_RELEASE_FOR_MOD_WRITE;

/* 375 */
typedef NTSTATUS __stdcall FAST_IO_ACQUIRE_FOR_CCFLUSH(struct _FILE_OBJECT *FileObject, struct _DEVICE_OBJECT *DeviceObject);

/* 374 */
typedef FAST_IO_ACQUIRE_FOR_CCFLUSH *PFAST_IO_ACQUIRE_FOR_CCFLUSH;

/* 377 */
typedef NTSTATUS __stdcall FAST_IO_RELEASE_FOR_CCFLUSH(struct _FILE_OBJECT *FileObject, struct _DEVICE_OBJECT *DeviceObject);

/* 376 */
typedef FAST_IO_RELEASE_FOR_CCFLUSH *PFAST_IO_RELEASE_FOR_CCFLUSH;

/* 111 */
struct _FAST_IO_DISPATCH
{
  ULONG SizeOfFastIoDispatch;
  PFAST_IO_CHECK_IF_POSSIBLE FastIoCheckIfPossible;
  PFAST_IO_READ FastIoRead;
  PFAST_IO_WRITE FastIoWrite;
  PFAST_IO_QUERY_BASIC_INFO FastIoQueryBasicInfo;
  PFAST_IO_QUERY_STANDARD_INFO FastIoQueryStandardInfo;
  PFAST_IO_LOCK FastIoLock;
  PFAST_IO_UNLOCK_SINGLE FastIoUnlockSingle;
  PFAST_IO_UNLOCK_ALL FastIoUnlockAll;
  PFAST_IO_UNLOCK_ALL_BY_KEY FastIoUnlockAllByKey;
  PFAST_IO_DEVICE_CONTROL FastIoDeviceControl;
  PFAST_IO_ACQUIRE_FILE AcquireFileForNtCreateSection;
  PFAST_IO_RELEASE_FILE ReleaseFileForNtCreateSection;
  PFAST_IO_DETACH_DEVICE FastIoDetachDevice;
  PFAST_IO_QUERY_NETWORK_OPEN_INFO FastIoQueryNetworkOpenInfo;
  PFAST_IO_ACQUIRE_FOR_MOD_WRITE AcquireForModWrite;
  PFAST_IO_MDL_READ MdlRead;
  PFAST_IO_MDL_READ_COMPLETE MdlReadComplete;
  PFAST_IO_PREPARE_MDL_WRITE PrepareMdlWrite;
  PFAST_IO_MDL_WRITE_COMPLETE MdlWriteComplete;
  PFAST_IO_READ_COMPRESSED FastIoReadCompressed;
  PFAST_IO_WRITE_COMPRESSED FastIoWriteCompressed;
  PFAST_IO_MDL_READ_COMPLETE_COMPRESSED MdlReadCompleteCompressed;
  PFAST_IO_MDL_WRITE_COMPLETE_COMPRESSED MdlWriteCompleteCompressed;
  PFAST_IO_QUERY_OPEN FastIoQueryOpen;
  PFAST_IO_RELEASE_FOR_MOD_WRITE ReleaseForModWrite;
  PFAST_IO_ACQUIRE_FOR_CCFLUSH AcquireForCcFlush;
  PFAST_IO_RELEASE_FOR_CCFLUSH ReleaseForCcFlush;
};

/* 205 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$502122D1A42362B108E5158884513E4D
{
  PIO_SECURITY_CONTEXT SecurityContext;
  ULONG Options;
  __declspec(align(8)) USHORT FileAttributes;
  USHORT ShareAccess;
  __declspec(align(8)) ULONG EaLength;
};

/* 230 */
typedef struct _NAMED_PIPE_CREATE_PARAMETERS *PNAMED_PIPE_CREATE_PARAMETERS;

/* 229 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$B6C0E447A90B79AEFA8F9249CE8F183F
{
  PIO_SECURITY_CONTEXT SecurityContext;
  ULONG Options;
  __declspec(align(8)) USHORT Reserved;
  USHORT ShareAccess;
  PNAMED_PIPE_CREATE_PARAMETERS Parameters;
};

/* 233 */
typedef struct _MAILSLOT_CREATE_PARAMETERS *PMAILSLOT_CREATE_PARAMETERS;

/* 232 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$4ECB4BBAC29C474F4B1FDBE6B16B96B3
{
  PIO_SECURITY_CONTEXT SecurityContext;
  ULONG Options;
  __declspec(align(8)) USHORT Reserved;
  USHORT ShareAccess;
  PMAILSLOT_CREATE_PARAMETERS Parameters;
};

/* 235 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$19595C4FDD76DF396DCB47E02D8CE804
{
  ULONG Length;
  __declspec(align(8)) ULONG Key;
  ULONG Flags;
  LARGE_INTEGER ByteOffset;
};

/* 236 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$6A556B20638983A22D68712867326CBB
{
  ULONG Length;
  PUNICODE_STRING FileName;
  FILE_INFORMATION_CLASS FileInformationClass;
  __declspec(align(8)) ULONG FileIndex;
};

/* 237 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$F1FB7B7206FBB228C223D533AFBCB926
{
  ULONG Length;
  __declspec(align(8)) ULONG CompletionFilter;
};

/* 238 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$3504904A9B7D3A962144091A63172654
{
  ULONG Length;
  __declspec(align(8)) ULONG CompletionFilter;
  __declspec(align(8)) DIRECTORY_NOTIFY_INFORMATION_CLASS DirectoryNotifyInformationClass;
};

/* 241 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$607E139328A4604A66FA807B5013BC6F
{
  ULONG Length;
  __declspec(align(8)) FILE_INFORMATION_CLASS FileInformationClass;
};

/* 244 */
struct _IO_STACK_LOCATION::$::$::$A1B04431FB6E59C2D561338119C8AE61::$5395532E35CA13A919E63C6E41FE24BB
{
  BOOLEAN ReplaceIfExists;
  BOOLEAN AdvanceOnly;
};

/* 243 */
union _IO_STACK_LOCATION::$::$AB1B8735119157E5D1443CA717CFC90B::$A1B04431FB6E59C2D561338119C8AE61
{
  struct
  {
    BOOLEAN ReplaceIfExists;
    BOOLEAN AdvanceOnly;
  };
  ULONG ClusterCount;
  HANDLE DeleteHandle;
};

/* 242 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$AB1B8735119157E5D1443CA717CFC90B
{
  ULONG Length;
  __declspec(align(8)) FILE_INFORMATION_CLASS FileInformationClass;
  PFILE_OBJECT FileObject;
  union
  {
    struct
    {
      BOOLEAN ReplaceIfExists;
      BOOLEAN AdvanceOnly;
    };
    ULONG ClusterCount;
    HANDLE DeleteHandle;
  };
};

/* 245 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$6D71BC2EE0BEC6E164C292EB723A644F
{
  ULONG Length;
  PVOID EaList;
  ULONG EaListLength;
  __declspec(align(8)) ULONG EaIndex;
};

/* 246 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$AFA69771633799B8FB97339D76F53EAE
{
  ULONG Length;
};

/* 247 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$8F4C8BAB08B5A02F6903FB32DA7A20A0
{
  ULONG Length;
  __declspec(align(8)) FS_INFORMATION_CLASS FsInformationClass;
};

/* 250 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$544CD38FB1143AA2EF8E4E19ECBE0BC1
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG FsControlCode;
  PVOID Type3InputBuffer;
};

/* 251 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$BDE1C18626D9C387EACC2762ED2EBE62
{
  PLARGE_INTEGER Length;
  __declspec(align(8)) ULONG Key;
  LARGE_INTEGER ByteOffset;
};

/* 252 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$D5072EFA0FD1785335960F91D4F54465
{
  ULONG OutputBufferLength;
  __declspec(align(8)) ULONG InputBufferLength;
  __declspec(align(8)) ULONG IoControlCode;
  PVOID Type3InputBuffer;
};

/* 253 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$D83D451722FAB9487C7255AEE094D32E
{
  SECURITY_INFORMATION SecurityInformation;
  __declspec(align(8)) ULONG Length;
};

/* 255 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$E1830675726AC350ADD284B511E01E52
{
  SECURITY_INFORMATION SecurityInformation;
  PSECURITY_DESCRIPTOR SecurityDescriptor;
};

/* 256 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$FA02ECF11A69AC1E6B191DC34CAEB912
{
  PVPB Vpb;
  PDEVICE_OBJECT DeviceObject;
};

/* 259 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$B2B4984C7002DD41520623255E2F9497
{
  struct _SCSI_REQUEST_BLOCK *Srb;
};

/* 262 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$525464D5DCAD8B8C6AA0F9E4B917EADA
{
  ULONG Length;
  PSID StartSid;
  PFILE_GET_QUOTA_INFORMATION SidList;
  ULONG SidListLength;
};

/* 271 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$670710264263D47AAED285B3D8DDF250
{
  DEVICE_RELATION_TYPE Type;
};

/* 274 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$7995DA36ED0214F9D006DCD5B47162D4
{
  const GUID *InterfaceType;
  USHORT Size;
  USHORT Version;
  PINTERFACE Interface;
  PVOID InterfaceSpecificData;
};

/* 279 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$6B11BC409C8BDB4C1D2CF8E6F83B383D
{
  PDEVICE_CAPABILITIES Capabilities;
};

/* 286 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$E3C1BD80419791D70DF0170630DDCD15
{
  PIO_RESOURCE_REQUIREMENTS_LIST IoResourceRequirementList;
};

/* 312 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$A7E969D4AB37DFCCDF3B9267E9AA5B4E
{
  ULONG WhichSpace;
  PVOID Buffer;
  ULONG Offset;
  __declspec(align(8)) ULONG Length;
};

/* 313 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$CAFA629F92AFE900ACAC7E5B47418F4C
{
  BOOLEAN Lock;
};

/* 314 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$03E399533941020534C84F7B69BA6C0D
{
  BUS_QUERY_ID_TYPE IdType;
};

/* 317 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$B4A62011343B3DB9A4CF5A16B9E2E60D
{
  DEVICE_TEXT_TYPE DeviceTextType;
  __declspec(align(8)) LCID LocaleId;
};

/* 321 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$9262F46D7DDB73DE5D2FA4C200481D73
{
  BOOLEAN InPath;
  BOOLEAN Reserved[3];
  __declspec(align(8)) DEVICE_USAGE_NOTIFICATION_TYPE Type;
};

/* 324 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$B225BF4DA8BD0649341E73B822EE9BDC
{
  SYSTEM_POWER_STATE PowerState;
};

/* 326 */
typedef struct _POWER_SEQUENCE *PPOWER_SEQUENCE;

/* 325 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$A3F11F7237E1D19F6A2E9E54FFFFB312
{
  PPOWER_SEQUENCE PowerSequence;
};

/* 333 */
struct _SYSTEM_POWER_STATE_CONTEXT::$24C8B4A8D8171F5B81AB3D9B532BE167::$D446BF98445B25F2A957A6F10A39C71E
{
  unsigned __int32 Reserved1 : 8;
  unsigned __int32 TargetSystemState : 4;
  unsigned __int32 EffectiveSystemState : 4;
  unsigned __int32 CurrentSystemState : 4;
  unsigned __int32 IgnoreHibernationPath : 1;
  unsigned __int32 PseudoTransition : 1;
  unsigned __int32 KernelSoftReboot : 1;
  unsigned __int32 DirectedDripsTransition : 1;
  unsigned __int32 Reserved2 : 8;
};

/* 332 */
union _SYSTEM_POWER_STATE_CONTEXT::$24C8B4A8D8171F5B81AB3D9B532BE167
{
  struct
  {
    unsigned __int32 Reserved1 : 8;
    unsigned __int32 TargetSystemState : 4;
    unsigned __int32 EffectiveSystemState : 4;
    unsigned __int32 CurrentSystemState : 4;
    unsigned __int32 IgnoreHibernationPath : 1;
    unsigned __int32 PseudoTransition : 1;
    unsigned __int32 KernelSoftReboot : 1;
    unsigned __int32 DirectedDripsTransition : 1;
    unsigned __int32 Reserved2 : 8;
  };
  ULONG ContextAsUlong;
};

/* 331 */
struct _SYSTEM_POWER_STATE_CONTEXT
{
  union
  {
    struct
    {
      unsigned __int32 Reserved1 : 8;
      unsigned __int32 TargetSystemState : 4;
      unsigned __int32 EffectiveSystemState : 4;
      unsigned __int32 CurrentSystemState : 4;
      unsigned __int32 IgnoreHibernationPath : 1;
      unsigned __int32 PseudoTransition : 1;
      unsigned __int32 KernelSoftReboot : 1;
      unsigned __int32 DirectedDripsTransition : 1;
      unsigned __int32 Reserved2 : 8;
    };
    ULONG ContextAsUlong;
  };
};

/* 330 */
typedef struct _SYSTEM_POWER_STATE_CONTEXT SYSTEM_POWER_STATE_CONTEXT;

/* 329 */
union _IO_STACK_LOCATION::$::$9010306D1331644169105A79F87BFB5E::$7E80610E1B9C691709D7734F8FEF924B
{
  ULONG SystemContext;
  SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext;
};

/* 335 */
enum _POWER_STATE_TYPE
{
  SystemPowerState = 0x0,
  DevicePowerState = 0x1,
};

/* 334 */
typedef enum _POWER_STATE_TYPE POWER_STATE_TYPE;

/* 337 */
union _POWER_STATE
{
  SYSTEM_POWER_STATE SystemState;
  DEVICE_POWER_STATE DeviceState;
};

/* 336 */
typedef union _POWER_STATE POWER_STATE;

/* 339 */
enum $0FC989869F227A36D749990E523E5F04
{
  PowerActionNone = 0x0,
  PowerActionReserved = 0x1,
  PowerActionSleep = 0x2,
  PowerActionHibernate = 0x3,
  PowerActionShutdown = 0x4,
  PowerActionShutdownReset = 0x5,
  PowerActionShutdownOff = 0x6,
  PowerActionWarmEject = 0x7,
};

/* 338 */
typedef enum $0FC989869F227A36D749990E523E5F04 POWER_ACTION;

/* 328 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$9010306D1331644169105A79F87BFB5E
{
  union
  {
    ULONG SystemContext;
    SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext;
  };
  __declspec(align(8)) POWER_STATE_TYPE Type;
  __declspec(align(8)) POWER_STATE State;
  __declspec(align(8)) POWER_ACTION ShutdownType;
};

/* 340 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$69C11E4E3904219D9A8207E8DBA8FECD
{
  PCM_RESOURCE_LIST AllocatedResources;
  PCM_RESOURCE_LIST AllocatedResourcesTranslated;
};

/* 363 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$D24474CE3B68EBF89E5A61C71CBC75EE
{
  ULONG_PTR ProviderId;
  PVOID DataPath;
  ULONG BufferSize;
  PVOID Buffer;
};

/* 364 */
struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$15881024B0F660B7398AF4B4249A3A24
{
  PVOID Argument1;
  PVOID Argument2;
  PVOID Argument3;
  PVOID Argument4;
};

/* 204 */
union _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF
{
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$502122D1A42362B108E5158884513E4D Create;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$B6C0E447A90B79AEFA8F9249CE8F183F CreatePipe;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$4ECB4BBAC29C474F4B1FDBE6B16B96B3 CreateMailslot;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$19595C4FDD76DF396DCB47E02D8CE804 Read;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$19595C4FDD76DF396DCB47E02D8CE804 Write;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$6A556B20638983A22D68712867326CBB QueryDirectory;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$F1FB7B7206FBB228C223D533AFBCB926 NotifyDirectory;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$3504904A9B7D3A962144091A63172654 NotifyDirectoryEx;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$607E139328A4604A66FA807B5013BC6F QueryFile;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$AB1B8735119157E5D1443CA717CFC90B SetFile;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$6D71BC2EE0BEC6E164C292EB723A644F QueryEa;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$AFA69771633799B8FB97339D76F53EAE SetEa;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$8F4C8BAB08B5A02F6903FB32DA7A20A0 QueryVolume;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$8F4C8BAB08B5A02F6903FB32DA7A20A0 SetVolume;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$544CD38FB1143AA2EF8E4E19ECBE0BC1 FileSystemControl;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$BDE1C18626D9C387EACC2762ED2EBE62 LockControl;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$D5072EFA0FD1785335960F91D4F54465 DeviceIoControl;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$D83D451722FAB9487C7255AEE094D32E QuerySecurity;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$E1830675726AC350ADD284B511E01E52 SetSecurity;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$FA02ECF11A69AC1E6B191DC34CAEB912 MountVolume;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$FA02ECF11A69AC1E6B191DC34CAEB912 VerifyVolume;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$B2B4984C7002DD41520623255E2F9497 Scsi;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$525464D5DCAD8B8C6AA0F9E4B917EADA QueryQuota;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$AFA69771633799B8FB97339D76F53EAE SetQuota;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$670710264263D47AAED285B3D8DDF250 QueryDeviceRelations;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$7995DA36ED0214F9D006DCD5B47162D4 QueryInterface;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$6B11BC409C8BDB4C1D2CF8E6F83B383D DeviceCapabilities;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$E3C1BD80419791D70DF0170630DDCD15 FilterResourceRequirements;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$A7E969D4AB37DFCCDF3B9267E9AA5B4E ReadWriteConfig;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$CAFA629F92AFE900ACAC7E5B47418F4C SetLock;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$03E399533941020534C84F7B69BA6C0D QueryId;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$B4A62011343B3DB9A4CF5A16B9E2E60D QueryDeviceText;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$9262F46D7DDB73DE5D2FA4C200481D73 UsageNotification;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$B225BF4DA8BD0649341E73B822EE9BDC WaitWake;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$A3F11F7237E1D19F6A2E9E54FFFFB312 PowerSequence;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$9010306D1331644169105A79F87BFB5E Power;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$69C11E4E3904219D9A8207E8DBA8FECD StartDevice;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$D24474CE3B68EBF89E5A61C71CBC75EE WMI;
  struct _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF::$15881024B0F660B7398AF4B4249A3A24 Others;
};

/* 366 */
typedef NTSTATUS __stdcall IO_COMPLETION_ROUTINE(PDEVICE_OBJECT DeviceObject, PIRP Irp, PVOID Context);

/* 365 */
typedef IO_COMPLETION_ROUTINE *PIO_COMPLETION_ROUTINE;

/* 203 */
struct _IO_STACK_LOCATION
{
  UCHAR MajorFunction;
  UCHAR MinorFunction;
  UCHAR Flags;
  UCHAR Control;
  union _IO_STACK_LOCATION::$3F40624FA6BA75D391A2F4D7FEA8ACCF Parameters;
  PDEVICE_OBJECT DeviceObject;
  PFILE_OBJECT FileObject;
  PIO_COMPLETION_ROUTINE CompletionRoutine;
  PVOID Context;
};

/* 410 */
struct _DEVICE_OBJECT_POWER_EXTENSION;

/* 211 */
enum _SECURITY_IMPERSONATION_LEVEL
{
  SecurityAnonymous = 0x0,
  SecurityIdentification = 0x1,
  SecurityImpersonation = 0x2,
  SecurityDelegation = 0x3,
};

/* 210 */
typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;

/* 212 */
typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;

/* 209 */
struct _SECURITY_QUALITY_OF_SERVICE
{
  DWORD Length;
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;
  BOOLEAN EffectiveOnly;
};

/* 216 */
struct _LUID
{
  DWORD LowPart;
  LONG HighPart;
};

/* 215 */
typedef struct _LUID LUID;

/* 220 */
typedef PVOID PACCESS_TOKEN;

/* 219 */
struct _SECURITY_SUBJECT_CONTEXT
{
  PACCESS_TOKEN ClientToken;
  SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  PACCESS_TOKEN PrimaryToken;
  PVOID ProcessAuditId;
};

/* 218 */
typedef struct _SECURITY_SUBJECT_CONTEXT SECURITY_SUBJECT_CONTEXT;

/* 226 */
#pragma pack(push, 4)
struct _LUID_AND_ATTRIBUTES
{
  LUID Luid;
  DWORD Attributes;
};
#pragma pack(pop)

/* 225 */
typedef struct _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;

/* 224 */
struct _INITIAL_PRIVILEGE_SET
{
  ULONG PrivilegeCount;
  ULONG Control;
  LUID_AND_ATTRIBUTES Privilege[3];
};

/* 223 */
typedef struct _INITIAL_PRIVILEGE_SET INITIAL_PRIVILEGE_SET;

/* 228 */
struct _PRIVILEGE_SET
{
  DWORD PrivilegeCount;
  DWORD Control;
  LUID_AND_ATTRIBUTES Privilege[1];
};

/* 227 */
typedef struct _PRIVILEGE_SET PRIVILEGE_SET;

/* 222 */
union _ACCESS_STATE::$18D81C5C1A882E7A2AF410C6CD9261CD
{
  INITIAL_PRIVILEGE_SET InitialPrivilegeSet;
  PRIVILEGE_SET PrivilegeSet;
};

/* 214 */
struct _ACCESS_STATE
{
  LUID OperationID;
  BOOLEAN SecurityEvaluated;
  BOOLEAN GenerateAudit;
  BOOLEAN GenerateOnClose;
  BOOLEAN PrivilegesAllocated;
  ULONG Flags;
  ACCESS_MASK RemainingDesiredAccess;
  ACCESS_MASK PreviouslyGrantedAccess;
  ACCESS_MASK OriginalDesiredAccess;
  SECURITY_SUBJECT_CONTEXT SubjectSecurityContext;
  PSECURITY_DESCRIPTOR SecurityDescriptor;
  PVOID AuxData;
  union _ACCESS_STATE::$18D81C5C1A882E7A2AF410C6CD9261CD Privileges;
  BOOLEAN AuditPrivileges;
  UNICODE_STRING ObjectName;
  UNICODE_STRING ObjectTypeName;
};

/* 123 */
struct _FILE_BASIC_INFORMATION
{
  LARGE_INTEGER CreationTime;
  LARGE_INTEGER LastAccessTime;
  LARGE_INTEGER LastWriteTime;
  LARGE_INTEGER ChangeTime;
  ULONG FileAttributes;
};

/* 127 */
struct _FILE_STANDARD_INFORMATION
{
  LARGE_INTEGER AllocationSize;
  LARGE_INTEGER EndOfFile;
  ULONG NumberOfLinks;
  BOOLEAN DeletePending;
  BOOLEAN Directory;
};

/* 173 */
struct _COMPRESSED_DATA_INFO
{
  USHORT CompressionFormatAndEngine;
  UCHAR CompressionUnitShift;
  UCHAR ChunkShift;
  UCHAR ClusterShift;
  UCHAR Reserved;
  USHORT NumberOfChunks;
  ULONG CompressedChunkSizes[1];
};

/* 231 */
struct _NAMED_PIPE_CREATE_PARAMETERS
{
  ULONG NamedPipeType;
  ULONG ReadMode;
  ULONG CompletionMode;
  ULONG MaximumInstances;
  ULONG InboundQuota;
  ULONG OutboundQuota;
  LARGE_INTEGER DefaultTimeout;
  BOOLEAN TimeoutSpecified;
};

/* 234 */
struct _MAILSLOT_CREATE_PARAMETERS
{
  ULONG MailslotQuota;
  ULONG MaximumMessageSize;
  LARGE_INTEGER ReadTimeout;
  BOOLEAN TimeoutSpecified;
};

/* 261 */
union _SCSI_REQUEST_BLOCK::$881DB7056EA58ED002ED8DEAE86A2418
{
  ULONG InternalStatus;
  ULONG QueueSortKey;
  ULONG LinkTimeoutValue;
};

/* 260 */
struct _SCSI_REQUEST_BLOCK
{
  USHORT Length;
  UCHAR Function;
  UCHAR SrbStatus;
  UCHAR ScsiStatus;
  UCHAR PathId;
  UCHAR TargetId;
  UCHAR Lun;
  UCHAR QueueTag;
  UCHAR QueueAction;
  UCHAR CdbLength;
  UCHAR SenseInfoBufferLength;
  ULONG SrbFlags;
  ULONG DataTransferLength;
  ULONG TimeOutValue;
  PVOID DataBuffer;
  PVOID SenseInfoBuffer;
  struct _SCSI_REQUEST_BLOCK *NextSrb;
  PVOID OriginalRequest;
  PVOID SrbExtension;
  union
  {
    ULONG InternalStatus;
    ULONG QueueSortKey;
    ULONG LinkTimeoutValue;
  };
  ULONG Reserved;
  UCHAR Cdb[16];
};

/* 327 */
struct _POWER_SEQUENCE
{
  ULONG SequenceD1;
  ULONG SequenceD2;
  ULONG SequenceD3;
};

/* 523 */
struct _OSVERSIONINFOW
{
  DWORD dwOSVersionInfoSize;
  DWORD dwMajorVersion;
  DWORD dwMinorVersion;
  DWORD dwBuildNumber;
  DWORD dwPlatformId;
  WCHAR szCSDVersion[128];
};

/* 524 */
struct C_SCOPE_TABLE
{
  void *__ptr32 Begin;
  void *__ptr32 End;
  void *__ptr32 Handler;
  void *__ptr32 Target;
};

/* 525 */
union __declspec(align(64)) __m512
{
  float m512_f32[16];
};

/* 526 */
union __declspec(align(64)) __m512d
{
  double m512d_f64[8];
};

/* 527 */
union __declspec(align(64)) __m512i
{
  __int8 m512i_i8[64];
  __int16 m512i_i16[32];
  __int32 m512i_i32[16];
  __int64 m512i_i64[8];
  unsigned __int8 m512i_u8[64];
  unsigned __int16 m512i_u16[32];
  unsigned __int32 m512i_u32[16];
  unsigned __int64 m512i_u64[8];
};

/* 528 */
union __declspec(align(16)) __m128
{
  float m128_f32[4];
  unsigned __int64 m128_u64[2];
  __int8 m128_i8[16];
  __int16 m128_i16[8];
  __int32 m128_i32[4];
  __int64 m128_i64[2];
  unsigned __int8 m128_u8[16];
  unsigned __int16 m128_u16[8];
  unsigned __int32 m128_u32[4];
};

/* 530 */
typedef USHORT FLT_FILE_NAME_PARSED_FLAGS;

/* 529 */
struct _FLT_FILE_NAME_INFORMATION
{
  USHORT Size;
  FLT_FILE_NAME_PARSED_FLAGS NamesParsed;
  FLT_FILE_NAME_OPTIONS Format;
  UNICODE_STRING Name;
  UNICODE_STRING Volume;
  UNICODE_STRING Share;
  UNICODE_STRING Extension;
  UNICODE_STRING Stream;
  UNICODE_STRING FinalComponent;
  UNICODE_STRING ParentDir;
};

/* 531 */
struct struct_eData
{
  _BYTE Array[8];
  _QWORD BaseAddress;
  _QWORD ZeroBits;
  _QWORD RegionSize;
  _DWORD Type;
  _DWORD Protect;
};

/* 532 */
struct struct_Eac_Data
{
  _BYTE gap0[8];
  _QWORD Process;
  _QWORD ProcessId;
  _BYTE gap18[408];
  _QWORD Address;
  _BYTE gap1B8[16];
  struct _FAST_MUTEX fast_mutex;
};

/* 533 */
struct struct_EAC_Memory_Data
{
  _OWORD oword0;
  _OWORD oword10;
  _OWORD oword20;
  _OWORD oword30;
  _QWORD StartParameter;
  _QWORD ModuleName;
  _OWORD Buffer;
};

/* 534 */
struct struct_eData_1
{
  _BYTE gap0[40];
  _DWORD dword28;
  _BYTE gap2C[12];
  HANDLE ThreadId;
  _BYTE gap40[72];
  _QWORD qword88;
  void **Argument1;
};

/* 535 */
struct __unaligned __declspec(align(1)) struct_EAC_Apc_Data
{
  _QWORD ThreadId;
  _QWORD Argument1;
  _QWORD Argument2;
  _BYTE Flag;
};

/* 536 */
typedef struct _IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY;

/* 537 */
struct _IMAGE_DATA_DIRECTORY
{
  DWORD VirtualAddress;
  DWORD Size;
};

/* 538 */
typedef struct _IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER32;

/* 540 */
typedef unsigned __int16 WORD;

/* 539 */
struct _IMAGE_OPTIONAL_HEADER32
{
  WORD Magic;
  BYTE MajorLinkerVersion;
  BYTE MinorLinkerVersion;
  DWORD SizeOfCode;
  DWORD SizeOfInitializedData;
  DWORD SizeOfUninitializedData;
  DWORD AddressOfEntryPoint;
  DWORD BaseOfCode;
  DWORD BaseOfData;
  DWORD ImageBase;
  DWORD SectionAlignment;
  DWORD FileAlignment;
  WORD MajorOperatingSystemVersion;
  WORD MinorOperatingSystemVersion;
  WORD MajorImageVersion;
  WORD MinorImageVersion;
  WORD MajorSubsystemVersion;
  WORD MinorSubsystemVersion;
  DWORD Win32VersionValue;
  DWORD SizeOfImage;
  DWORD SizeOfHeaders;
  DWORD CheckSum;
  WORD Subsystem;
  WORD DllCharacteristics;
  DWORD SizeOfStackReserve;
  DWORD SizeOfStackCommit;
  DWORD SizeOfHeapReserve;
  DWORD SizeOfHeapCommit;
  DWORD LoaderFlags;
  DWORD NumberOfRvaAndSizes;
  IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 543 */
struct _IMAGE_FILE_HEADER
{
  WORD Machine;
  WORD NumberOfSections;
  DWORD TimeDateStamp;
  DWORD PointerToSymbolTable;
  DWORD NumberOfSymbols;
  WORD SizeOfOptionalHeader;
  WORD Characteristics;
};

/* 542 */
typedef struct _IMAGE_FILE_HEADER IMAGE_FILE_HEADER;

/* 541 */
#pragma pack(push, 4)
struct _IMAGE_NT_HEADERS
{
  ULONG Signature;
  IMAGE_FILE_HEADER FileHeader;
  IMAGE_OPTIONAL_HEADER32 OptionalHeader;
};
#pragma pack(pop)

/* 544 */
struct struct_PFLT_INSTANCE
{
  _BYTE gap0[24];
  PFLT_INSTANCE instance;
};

/* 545 */
typedef struct _FILE_STANDARD_INFORMATION FILE_STANDARD_INFORMATION;

/* 547 */
typedef struct _IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS64;

/* 546 */
typedef IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS;

/* 550 */
struct _IMAGE_OPTIONAL_HEADER64
{
  WORD Magic;
  BYTE MajorLinkerVersion;
  BYTE MinorLinkerVersion;
  DWORD SizeOfCode;
  DWORD SizeOfInitializedData;
  DWORD SizeOfUninitializedData;
  DWORD AddressOfEntryPoint;
  DWORD BaseOfCode;
  ULONGLONG ImageBase;
  DWORD SectionAlignment;
  DWORD FileAlignment;
  WORD MajorOperatingSystemVersion;
  WORD MinorOperatingSystemVersion;
  WORD MajorImageVersion;
  WORD MinorImageVersion;
  WORD MajorSubsystemVersion;
  WORD MinorSubsystemVersion;
  DWORD Win32VersionValue;
  DWORD SizeOfImage;
  DWORD SizeOfHeaders;
  DWORD CheckSum;
  WORD Subsystem;
  WORD DllCharacteristics;
  ULONGLONG SizeOfStackReserve;
  ULONGLONG SizeOfStackCommit;
  ULONGLONG SizeOfHeapReserve;
  ULONGLONG SizeOfHeapCommit;
  DWORD LoaderFlags;
  DWORD NumberOfRvaAndSizes;
  IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 549 */
typedef struct _IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER64;

/* 548 */
struct _IMAGE_NT_HEADERS64
{
  DWORD Signature;
  IMAGE_FILE_HEADER FileHeader;
  IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

/* 551 */
struct struct_EAC_Event
{
  _BYTE gap0[24];
  _BYTE byte18;
  _QWORD qword20;
  _QWORD qword28;
  _DWORD dword30;
  _QWORD qword38;
  _DWORD dword40;
  struct _KEVENT event;
};

/* 552 */
typedef struct _PEB PEB;

/* 555 */
struct _PEB::$98531C30369844289F048F50DA9C11E6::$FD42647A95697634BDFB73B2D6521EB2
{
  unsigned __int8 ImageUsesLargePages : 1;
  unsigned __int8 IsProtectedProcess : 1;
  unsigned __int8 IsLegacyProcess : 1;
  unsigned __int8 IsImageDynamicallyRelocated : 1;
  unsigned __int8 SkipPatchingUser32Forwarders : 1;
  unsigned __int8 SpareBits : 3;
};

/* 554 */
union _PEB::$98531C30369844289F048F50DA9C11E6
{
  BOOLEAN BitField;
  struct
  {
    unsigned __int8 ImageUsesLargePages : 1;
    unsigned __int8 IsProtectedProcess : 1;
    unsigned __int8 IsLegacyProcess : 1;
    unsigned __int8 IsImageDynamicallyRelocated : 1;
    unsigned __int8 SkipPatchingUser32Forwarders : 1;
    unsigned __int8 SpareBits : 3;
  };
};

/* 556 */
typedef struct _PEB_LDR_DATA *PPEB_LDR_DATA;

/* 567 */
struct _PEB::$53BFDF25AC1486622A5316A4EF26851E::$91908E46E5FCDFB3FCB6ED58580BB4F9
{
  unsigned __int32 ProcessInJob : 1;
  unsigned __int32 ProcessInitializing : 1;
  unsigned __int32 ProcessUsingVEH : 1;
  unsigned __int32 ProcessUsingVCH : 1;
  unsigned __int32 ReservedBits0 : 28;
};

/* 566 */
union _PEB::$53BFDF25AC1486622A5316A4EF26851E
{
  ULONG CrossProcessFlags;
  struct
  {
    unsigned __int32 ProcessInJob : 1;
    unsigned __int32 ProcessInitializing : 1;
    unsigned __int32 ProcessUsingVEH : 1;
    unsigned __int32 ProcessUsingVCH : 1;
    unsigned __int32 ReservedBits0 : 28;
  };
};

/* 568 */
union _PEB::$C441D3DC9486BA1297D17299B5FCA3C3
{
  PVOID KernelCallbackTable;
  PVOID UserSharedInfoPtr;
};

/* 569 */
typedef struct _PEB_FREE_BLOCK *PPEB_FREE_BLOCK;

/* 571 */
typedef NTSTATUS (*PPOST_PROCESS_INIT_ROUTINE)(void);

/* 574 */
struct _ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC
{
  DWORD LowPart;
  DWORD HighPart;
};

/* 573 */
union _ULARGE_INTEGER
{
  struct
  {
    DWORD LowPart;
    DWORD HighPart;
  };
  struct _ULARGE_INTEGER::$0354AA9C204208F00D0965D07BBE7FAC u;
  ULONGLONG QuadPart;
};

/* 572 */
typedef union _ULARGE_INTEGER ULARGE_INTEGER;

/* 553 */
struct _PEB
{
  BOOLEAN InheritedAddressSpace;
  BOOLEAN ReadImageFileExecOptions;
  BOOLEAN BeingDebugged;
  union
  {
    BOOLEAN BitField;
    struct
    {
      unsigned __int8 ImageUsesLargePages : 1;
      unsigned __int8 IsProtectedProcess : 1;
      unsigned __int8 IsLegacyProcess : 1;
      unsigned __int8 IsImageDynamicallyRelocated : 1;
      unsigned __int8 SkipPatchingUser32Forwarders : 1;
      unsigned __int8 SpareBits : 3;
    };
  };
  HANDLE Mutant;
  PVOID ImageBaseAddress;
  PPEB_LDR_DATA Ldr;
  struct _RTL_USER_PROCESS_PARAMETERS *ProcessParameters;
  PVOID SubSystemData;
  PVOID ProcessHeap;
  struct _RTL_CRITICAL_SECTION *FastPebLock;
  PVOID AltThunkSListPtr;
  PVOID IFEOKey;
  union
  {
    ULONG CrossProcessFlags;
    struct
    {
      unsigned __int32 ProcessInJob : 1;
      unsigned __int32 ProcessInitializing : 1;
      unsigned __int32 ProcessUsingVEH : 1;
      unsigned __int32 ProcessUsingVCH : 1;
      unsigned __int32 ReservedBits0 : 28;
    };
  };
  union
  {
    PVOID KernelCallbackTable;
    PVOID UserSharedInfoPtr;
  };
  ULONG SystemReserved[1];
  ULONG SpareUlong;
  PPEB_FREE_BLOCK FreeList;
  ULONG TlsExpansionCounter;
  PVOID TlsBitmap;
  ULONG TlsBitmapBits[2];
  PVOID ReadOnlySharedMemoryBase;
  PVOID HotpatchInformation;
  PVOID *ReadOnlyStaticServerData;
  PVOID AnsiCodePageData;
  PVOID OemCodePageData;
  PVOID UnicodeCaseTableData;
  ULONG NumberOfProcessors;
  ULONG NtGlobalFlag;
  LARGE_INTEGER CriticalSectionTimeout;
  ULONG_PTR HeapSegmentReserve;
  ULONG_PTR HeapSegmentCommit;
  ULONG_PTR HeapDeCommitTotalFreeThreshold;
  ULONG_PTR HeapDeCommitFreeBlockThreshold;
  ULONG NumberOfHeaps;
  ULONG MaximumNumberOfHeaps;
  PVOID *ProcessHeaps;
  PVOID GdiSharedHandleTable;
  PVOID ProcessStarterHelper;
  ULONG GdiDCAttributeList;
  struct _RTL_CRITICAL_SECTION *LoaderLock;
  ULONG OSMajorVersion;
  ULONG OSMinorVersion;
  USHORT OSBuildNumber;
  USHORT OSCSDVersion;
  ULONG OSPlatformId;
  ULONG ImageSubsystem;
  ULONG ImageSubsystemMajorVersion;
  ULONG ImageSubsystemMinorVersion;
  ULONG_PTR ImageProcessAffinityMask;
  ULONG GdiHandleBuffer[60];
  PPOST_PROCESS_INIT_ROUTINE PostProcessInitRoutine;
  PVOID TlsExpansionBitmap;
  ULONG TlsExpansionBitmapBits[32];
  ULONG SessionId;
  ULARGE_INTEGER AppCompatFlags;
  ULARGE_INTEGER AppCompatFlagsUser;
  PVOID pShimData;
  PVOID AppCompatInfo;
  UNICODE_STRING CSDVersion;
  struct _ACTIVATION_CONTEXT_DATA *ActivationContextData;
  struct _ASSEMBLY_STORAGE_MAP *ProcessAssemblyStorageMap;
  struct _ACTIVATION_CONTEXT_DATA *SystemDefaultActivationContextData;
  struct _ASSEMBLY_STORAGE_MAP *SystemAssemblyStorageMap;
  ULONG_PTR MinimumStackCommit;
  PVOID *FlsCallback;
  LIST_ENTRY FlsListHead;
  PVOID FlsBitmap;
  ULONG FlsBitmapBits[4];
  ULONG FlsHighIndex;
  PVOID WerRegistrationData;
  PVOID WerShipAssertPtr;
};

/* 557 */
struct _PEB_LDR_DATA
{
  ULONG Length;
  BOOLEAN Initialized;
  PVOID SsHandle;
  LIST_ENTRY InLoadOrderModuleList;
  LIST_ENTRY InMemoryOrderModuleList;
  LIST_ENTRY InInitializationOrderModuleList;
  PVOID EntryInProgress;
  UCHAR ShutdownInProgress;
  PVOID ShutdownThreadId;
};

/* 560 */
struct _CURDIR
{
  UNICODE_STRING DosPath;
  HANDLE Handle;
};

/* 559 */
typedef struct _CURDIR CURDIR;

/* 562 */
struct _RTL_DRIVE_LETTER_CURDIR
{
  USHORT Flags;
  USHORT Length;
  ULONG TimeStamp;
  UNICODE_STRING DosPath;
};

/* 561 */
typedef struct _RTL_DRIVE_LETTER_CURDIR RTL_DRIVE_LETTER_CURDIR;

/* 558 */
struct _RTL_USER_PROCESS_PARAMETERS
{
  ULONG MaximumLength;
  ULONG Length;
  ULONG Flags;
  ULONG DebugFlags;
  HANDLE ConsoleHandle;
  ULONG ConsoleFlags;
  HANDLE StandardInput;
  HANDLE StandardOutput;
  HANDLE StandardError;
  CURDIR CurrentDirectory;
  UNICODE_STRING DllPath;
  UNICODE_STRING ImagePathName;
  UNICODE_STRING CommandLine;
  PWSTR Environment;
  ULONG StartingX;
  ULONG StartingY;
  ULONG CountX;
  ULONG CountY;
  ULONG CountCharsX;
  ULONG CountCharsY;
  ULONG FillAttribute;
  ULONG WindowFlags;
  ULONG ShowWindowFlags;
  UNICODE_STRING WindowTitle;
  UNICODE_STRING DesktopInfo;
  UNICODE_STRING ShellInfo;
  UNICODE_STRING RuntimeData;
  RTL_DRIVE_LETTER_CURDIR CurrentDirectories[32];
  SIZE_T EnvironmentSize;
  SIZE_T EnvironmentVersion;
};

/* 564 */
typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 563 */
#pragma pack(push, 8)
struct _RTL_CRITICAL_SECTION
{
  PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
  LONG LockCount;
  LONG RecursionCount;
  HANDLE OwningThread;
  HANDLE LockSemaphore;
  ULONG_PTR SpinCount;
};
#pragma pack(pop)

/* 570 */
struct _PEB_FREE_BLOCK
{
  struct _PEB_FREE_BLOCK *Next;
  ULONG Size;
};

/* 575 */
struct _ACTIVATION_CONTEXT_DATA
{
  ULONG Magic;
  ULONG HeaderSize;
  ULONG FormatVersion;
  ULONG TotalSize;
  ULONG DefaultTocOffset;
  ULONG ExtendedTocOffset;
  ULONG AssemblyRosterOffset;
  ULONG Flags;
};

/* 565 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  WORD Type;
  WORD CreatorBackTraceIndex;
  struct _RTL_CRITICAL_SECTION *CriticalSection;
  LIST_ENTRY ProcessLocksList;
  DWORD EntryCount;
  DWORD ContentionCount;
  DWORD Flags;
  WORD CreatorBackTraceIndexHigh;
  WORD SpareWORD;
};

/* 576 */
struct struct_a1
{
  _BYTE Size[4];
  unsigned int Address;
};

/* 577 */
struct struct_eData_2
{
  _QWORD data;
  _DWORD Size;
  _DWORD Address;
  _UNICODE_STRING unicode_string;
};

/* 578 */
struct __unaligned __declspec(align(1)) struct_v9
{
  _BYTE data[9];
  struct_a1 struct_a19;
};

/* 579 */
struct struct_eData_3
{
  _QWORD Flink;
  _DWORD ImageBaseAddress;
  _DWORD ProcessParameters;
  _UNICODE_STRING unicode_string;
};

/* 580 */
typedef struct _OBJECT_ATTRIBUTES OBJECT_ATTRIBUTES;

/* 581 */
struct struct_a1_1
{
  _DWORD dword0;
  _BYTE gap4[20];
  _DWORD dword18;
  _BYTE gap1C[36];
  unsigned __int16 unsigned___int1640;
  _WORD word42;
  _QWORD qword48;
  _BYTE gap50[104];
  _QWORD qwordB8;
  _QWORD qwordC0;
  _BYTE gapC8[16];
  _DWORD dwordD8;
  _DWORD dwordDC;
  _BYTE gapE0[64];
  _QWORD qword120;
  _QWORD qword128;
  _BYTE gap130[128];
  _QWORD qword1B0;
};

/* 584 */
struct _KAPC_STATE::$48607CC1B575AC6452C6DBD61B7A533E::$B5CD178F87BE184A5118D4920C61026E
{
  unsigned __int8 KernelApcInProgress : 1;
  unsigned __int8 SpecialApcInProgress : 1;
};

/* 583 */
union _KAPC_STATE::$48607CC1B575AC6452C6DBD61B7A533E
{
  UCHAR InProgressFlags;
  struct
  {
    unsigned __int8 KernelApcInProgress : 1;
    unsigned __int8 SpecialApcInProgress : 1;
  };
};

/* 586 */
struct _KAPC_STATE::$C7EAAFEB9868C14404D710B79F671B4F::$A85FE12DE136A601A0C0FDA7C2290F98
{
  unsigned __int8 SpecialUserApcPending : 1;
  unsigned __int8 UserApcPending : 1;
};

/* 585 */
union _KAPC_STATE::$C7EAAFEB9868C14404D710B79F671B4F
{
  BOOLEAN UserApcPendingAll;
  struct
  {
    unsigned __int8 SpecialUserApcPending : 1;
    unsigned __int8 UserApcPending : 1;
  };
};

/* 582 */
struct _KAPC_STATE
{
  LIST_ENTRY ApcListHead[2];
  struct _KPROCESS *Process;
  union
  {
    UCHAR InProgressFlags;
    struct
    {
      unsigned __int8 KernelApcInProgress : 1;
      unsigned __int8 SpecialApcInProgress : 1;
    };
  };
  BOOLEAN KernelApcPending;
  union
  {
    BOOLEAN UserApcPendingAll;
    struct
    {
      unsigned __int8 SpecialUserApcPending : 1;
      unsigned __int8 UserApcPending : 1;
    };
  };
};

/* 589 */
struct _PEB32::$435E73188FBA5220C8F309F96BF44FF0::$FD42647A95697634BDFB73B2D6521EB2
{
  unsigned __int8 ImageUsesLargePages : 1;
  unsigned __int8 IsProtectedProcess : 1;
  unsigned __int8 IsLegacyProcess : 1;
  unsigned __int8 IsImageDynamicallyRelocated : 1;
  unsigned __int8 SkipPatchingUser32Forwarders : 1;
  unsigned __int8 SpareBits : 3;
};

/* 588 */
union _PEB32::$435E73188FBA5220C8F309F96BF44FF0
{
  BOOLEAN BitField;
  struct
  {
    unsigned __int8 ImageUsesLargePages : 1;
    unsigned __int8 IsProtectedProcess : 1;
    unsigned __int8 IsLegacyProcess : 1;
    unsigned __int8 IsImageDynamicallyRelocated : 1;
    unsigned __int8 SkipPatchingUser32Forwarders : 1;
    unsigned __int8 SpareBits : 3;
  };
};

/* 591 */
struct _PEB32::$346723126734162AA566FD7D661704C9::$91908E46E5FCDFB3FCB6ED58580BB4F9
{
  unsigned __int32 ProcessInJob : 1;
  unsigned __int32 ProcessInitializing : 1;
  unsigned __int32 ProcessUsingVEH : 1;
  unsigned __int32 ProcessUsingVCH : 1;
  unsigned __int32 ReservedBits0 : 28;
};

/* 590 */
union _PEB32::$346723126734162AA566FD7D661704C9
{
  ULONG CrossProcessFlags;
  struct
  {
    unsigned __int32 ProcessInJob : 1;
    unsigned __int32 ProcessInitializing : 1;
    unsigned __int32 ProcessUsingVEH : 1;
    unsigned __int32 ProcessUsingVCH : 1;
    unsigned __int32 ReservedBits0 : 28;
  };
};

/* 592 */
union _PEB32::$C3E56AD0158E5D73D8C7CA160FA1B8D9
{
  ULONG KernelCallbackTable;
  ULONG UserSharedInfoPtr;
};

/* 594 */
struct _STRING32
{
  USHORT Length;
  USHORT MaximumLength;
  ULONG Buffer;
};

/* 593 */
typedef struct _STRING32 UNICODE_STRING32;

/* 595 */
struct LIST_ENTRY32
{
  DWORD Flink;
  DWORD Blink;
};

/* 587 */
struct _PEB32
{
  BOOLEAN InheritedAddressSpace;
  BOOLEAN ReadImageFileExecOptions;
  BOOLEAN BeingDebugged;
  union
  {
    BOOLEAN BitField;
    struct
    {
      unsigned __int8 ImageUsesLargePages : 1;
      unsigned __int8 IsProtectedProcess : 1;
      unsigned __int8 IsLegacyProcess : 1;
      unsigned __int8 IsImageDynamicallyRelocated : 1;
      unsigned __int8 SkipPatchingUser32Forwarders : 1;
      unsigned __int8 SpareBits : 3;
    };
  };
  ULONG Mutant;
  ULONG ImageBaseAddress;
  ULONG Ldr;
  ULONG ProcessParameters;
  ULONG SubSystemData;
  ULONG ProcessHeap;
  ULONG FastPebLock;
  ULONG AltThunkSListPtr;
  ULONG IFEOKey;
  union
  {
    ULONG CrossProcessFlags;
    struct
    {
      unsigned __int32 ProcessInJob : 1;
      unsigned __int32 ProcessInitializing : 1;
      unsigned __int32 ProcessUsingVEH : 1;
      unsigned __int32 ProcessUsingVCH : 1;
      unsigned __int32 ReservedBits0 : 28;
    };
  };
  union
  {
    ULONG KernelCallbackTable;
    ULONG UserSharedInfoPtr;
  };
  ULONG SystemReserved[1];
  ULONG SpareUlong;
  ULONG FreeList;
  ULONG TlsExpansionCounter;
  ULONG TlsBitmap;
  ULONG TlsBitmapBits[2];
  ULONG ReadOnlySharedMemoryBase;
  ULONG HotpatchInformation;
  ULONG ReadOnlyStaticServerData;
  ULONG AnsiCodePageData;
  ULONG OemCodePageData;
  ULONG UnicodeCaseTableData;
  ULONG NumberOfProcessors;
  ULONG NtGlobalFlag;
  LARGE_INTEGER CriticalSectionTimeout;
  ULONG HeapSegmentReserve;
  ULONG HeapSegmentCommit;
  ULONG HeapDeCommitTotalFreeThreshold;
  ULONG HeapDeCommitFreeBlockThreshold;
  ULONG NumberOfHeaps;
  ULONG MaximumNumberOfHeaps;
  ULONG ProcessHeaps;
  ULONG GdiSharedHandleTable;
  ULONG ProcessStarterHelper;
  ULONG GdiDCAttributeList;
  ULONG LoaderLock;
  ULONG OSMajorVersion;
  ULONG OSMinorVersion;
  USHORT OSBuildNumber;
  USHORT OSCSDVersion;
  ULONG OSPlatformId;
  ULONG ImageSubsystem;
  ULONG ImageSubsystemMajorVersion;
  ULONG ImageSubsystemMinorVersion;
  ULONG ImageProcessAffinityMask;
  ULONG GdiHandleBuffer[34];
  ULONG PostProcessInitRoutine;
  ULONG TlsExpansionBitmap;
  ULONG TlsExpansionBitmapBits[32];
  ULONG SessionId;
  ULARGE_INTEGER AppCompatFlags;
  ULARGE_INTEGER AppCompatFlagsUser;
  ULONG pShimData;
  ULONG AppCompatInfo;
  UNICODE_STRING32 CSDVersion;
  ULONG ActivationContextData;
  ULONG ProcessAssemblyStorageMap;
  ULONG SystemDefaultActivationContextData;
  ULONG SystemAssemblyStorageMap;
  ULONG MinimumStackCommit;
  ULONG FlsCallback;
  LIST_ENTRY32 FlsListHead;
  ULONG FlsBitmap;
  ULONG FlsBitmapBits[4];
  ULONG FlsHighIndex;
  ULONG WerRegistrationData;
  ULONG WerShipAssertPtr;
};

/* 596 */
struct __unaligned __declspec(align(4)) struct_eData_4
{
  _BYTE gap0[8];
  _QWORD BaseAddress;
  _QWORD RegionSize;
  _DWORD Status;
  _QWORD Information;
};

/* 597 */
struct struct_Memory
{
  _DWORD EncodeBuffer;
  _DWORD dword4;
  _DWORD ModuleSize;
  _DWORD ScaleSize;
  _QWORD Allocate;
};

/* 598 */
struct __unaligned __declspec(align(4)) struct_eData_5
{
  _BYTE gap0[8];
  _QWORD BaseAddress;
  _QWORD NumberOfBytes;
  _DWORD NewProtection;
};

/* 599 */
#pragma pack(push, 4)
struct _IMAGE_OPTIONAL_HEADER
{
  USHORT Magic;
  UCHAR MajorLinkerVersion;
  UCHAR MinorLinkerVersion;
  ULONG SizeOfCode;
  ULONG SizeOfInitializedData;
  ULONG SizeOfUninitializedData;
  ULONG AddressOfEntryPoint;
  ULONG BaseOfCode;
  ULONG BaseOfData;
  ULONG ImageBase;
  ULONG SectionAlignment;
  ULONG FileAlignment;
  USHORT MajorOperatingSystemVersion;
  USHORT MinorOperatingSystemVersion;
  USHORT MajorImageVersion;
  USHORT MinorImageVersion;
  USHORT MajorSubsystemVersion;
  USHORT MinorSubsystemVersion;
  ULONG Win32VersionValue;
  ULONG SizeOfImage;
  ULONG SizeOfHeaders;
  ULONG CheckSum;
  USHORT Subsystem;
  USHORT DllCharacteristics;
  ULONG SizeOfStackReserve;
  ULONG SizeOfStackCommit;
  ULONG SizeOfHeapReserve;
  ULONG SizeOfHeapCommit;
  ULONG LoaderFlags;
  ULONG NumberOfRvaAndSizes;
  IMAGE_DATA_DIRECTORY DataDirectory[16];
};
#pragma pack(pop)

/* 600 */
struct struct_eData_6
{
  char char0;
  _DWORD dword4;
  _WORD word8;
  __unaligned __declspec(align(1)) unsigned int unsigned_intA;
  __unaligned __declspec(align(1)) _QWORD qwordE;
  __unaligned __declspec(align(1)) _DWORD dword16;
  __unaligned __declspec(align(1)) _DWORD dword1A;
  _BYTE byte1E;
  _BYTE byte1F;
  _WORD word20;
  _BYTE gap22[510];
  _WORD word220;
  _BYTE gap222[22];
  _WORD word238;
  _BYTE gap23A[26];
  _WORD word254;
  _BYTE gap256[4];
  _WORD word25A;
  _OWORD oword260;
};

/* 601 */
struct struct_eData_7
{
  _BYTE gap0[16];
  unsigned __int16 unicode_string;
  _WORD word12;
  _QWORD qword18;
};

/* 602 */
struct struct_a2
{
  _BYTE gap0[8];
  _DWORD Size;
  __declspec(align(8)) unsigned int Lenght;
  _BYTE gap14[12];
  char *Buffer;
};

/* 603 */
struct __unaligned __declspec(align(4)) struct_eData_8
{
  _BYTE gap0[8];
  _QWORD BaseAddress;
  _QWORD RegionSize;
  _DWORD Type;
};

